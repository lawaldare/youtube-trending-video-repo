{"ast":null,"code":"import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, makeEnvironmentProviders, PLATFORM_ID, CSP_NONCE, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzWaveRenderer {\n  get waveAttributeName() {\n    return this.insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n  }\n  constructor(triggerElement, ngZone, insertExtraNode, platformId, cspNonce) {\n    this.triggerElement = triggerElement;\n    this.ngZone = ngZone;\n    this.insertExtraNode = insertExtraNode;\n    this.platformId = platformId;\n    this.cspNonce = cspNonce;\n    this.waveTransitionDuration = 400;\n    this.styleForPseudo = null;\n    this.extraNode = null;\n    this.lastTime = 0;\n    this.onClick = event => {\n      if (!this.triggerElement || !this.triggerElement.getAttribute || this.triggerElement.getAttribute('disabled') || event.target.tagName === 'INPUT' || this.triggerElement.className.indexOf('disabled') >= 0) {\n        return;\n      }\n      this.fadeOutWave();\n    };\n    this.platform = new Platform(this.platformId);\n    this.clickHandler = this.onClick.bind(this);\n    this.bindTriggerEvent();\n  }\n  bindTriggerEvent() {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.removeTriggerEvent();\n        if (this.triggerElement) {\n          this.triggerElement.addEventListener('click', this.clickHandler, true);\n        }\n      });\n    }\n  }\n  removeTriggerEvent() {\n    if (this.triggerElement) {\n      this.triggerElement.removeEventListener('click', this.clickHandler, true);\n    }\n  }\n  removeStyleAndExtraNode() {\n    if (this.styleForPseudo && document.body.contains(this.styleForPseudo)) {\n      document.body.removeChild(this.styleForPseudo);\n      this.styleForPseudo = null;\n    }\n    if (this.insertExtraNode && this.triggerElement.contains(this.extraNode)) {\n      this.triggerElement.removeChild(this.extraNode);\n    }\n  }\n  destroy() {\n    this.removeTriggerEvent();\n    this.removeStyleAndExtraNode();\n  }\n  fadeOutWave() {\n    const node = this.triggerElement;\n    const waveColor = this.getWaveColor(node);\n    node.setAttribute(this.waveAttributeName, 'true');\n    if (Date.now() < this.lastTime + this.waveTransitionDuration) {\n      return;\n    }\n    if (this.isValidColor(waveColor)) {\n      if (!this.styleForPseudo) {\n        this.styleForPseudo = document.createElement('style');\n        if (this.cspNonce) {\n          this.styleForPseudo.nonce = this.cspNonce;\n        }\n      }\n      this.styleForPseudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n      document.body.appendChild(this.styleForPseudo);\n    }\n    if (this.insertExtraNode) {\n      if (!this.extraNode) {\n        this.extraNode = document.createElement('div');\n      }\n      this.extraNode.className = 'ant-click-animating-node';\n      node.appendChild(this.extraNode);\n    }\n    this.lastTime = Date.now();\n    this.runTimeoutOutsideZone(() => {\n      node.removeAttribute(this.waveAttributeName);\n      this.removeStyleAndExtraNode();\n    }, this.waveTransitionDuration);\n  }\n  isValidColor(color) {\n    return !!color && color !== '#ffffff' && color !== 'rgb(255, 255, 255)' && this.isNotGrey(color) && !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(color) && color !== 'transparent';\n  }\n  isNotGrey(color) {\n    const match = color.match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n    if (match && match[1] && match[2] && match[3]) {\n      return !(match[1] === match[2] && match[2] === match[3]);\n    }\n    return true;\n  }\n  getWaveColor(node) {\n    const nodeStyle = getComputedStyle(node);\n    return nodeStyle.getPropertyValue('border-top-color') ||\n    // Firefox Compatible\n    nodeStyle.getPropertyValue('border-color') || nodeStyle.getPropertyValue('background-color');\n  }\n  runTimeoutOutsideZone(fn, delay) {\n    this.ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_WAVE_GLOBAL_DEFAULT_CONFIG = {\n  disabled: false\n};\nconst NZ_WAVE_GLOBAL_CONFIG = new InjectionToken('nz-wave-global-options');\nfunction provideNzWave(config) {\n  return makeEnvironmentProviders([{\n    provide: NZ_WAVE_GLOBAL_CONFIG,\n    useValue: config\n  }]);\n}\nlet NzWaveDirective = /*#__PURE__*/(() => {\n  class NzWaveDirective {\n    get disabled() {\n      return this.waveDisabled;\n    }\n    get rendererRef() {\n      return this.waveRenderer;\n    }\n    constructor(ngZone, elementRef, config, animationType, platformId, cspNonce) {\n      this.ngZone = ngZone;\n      this.elementRef = elementRef;\n      this.config = config;\n      this.animationType = animationType;\n      this.platformId = platformId;\n      this.cspNonce = cspNonce;\n      this.nzWaveExtraNode = false;\n      this.waveDisabled = false;\n      this.waveDisabled = this.isConfigDisabled();\n    }\n    isConfigDisabled() {\n      let disabled = false;\n      if (this.config && typeof this.config.disabled === 'boolean') {\n        disabled = this.config.disabled;\n      }\n      if (this.animationType === 'NoopAnimations') {\n        disabled = true;\n      }\n      return disabled;\n    }\n    ngOnDestroy() {\n      if (this.waveRenderer) {\n        this.waveRenderer.destroy();\n      }\n    }\n    ngOnInit() {\n      this.renderWaveIfEnabled();\n    }\n    renderWaveIfEnabled() {\n      if (!this.waveDisabled && this.elementRef.nativeElement) {\n        this.waveRenderer = new NzWaveRenderer(this.elementRef.nativeElement, this.ngZone, this.nzWaveExtraNode, this.platformId, this.cspNonce);\n      }\n    }\n    disable() {\n      this.waveDisabled = true;\n      if (this.waveRenderer) {\n        this.waveRenderer.removeTriggerEvent();\n        this.waveRenderer.removeStyleAndExtraNode();\n      }\n    }\n    enable() {\n      // config priority\n      this.waveDisabled = this.isConfigDisabled() || false;\n      if (this.waveRenderer) {\n        this.waveRenderer.bindTriggerEvent();\n      }\n    }\n    static #_ = this.ɵfac = function NzWaveDirective_Factory(t) {\n      return new (t || NzWaveDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NZ_WAVE_GLOBAL_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(CSP_NONCE, 8));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzWaveDirective,\n      selectors: [[\"\", \"nz-wave\", \"\"], [\"button\", \"nz-button\", \"\", 3, \"nzType\", \"link\", 3, \"nzType\", \"text\"]],\n      inputs: {\n        nzWaveExtraNode: \"nzWaveExtraNode\"\n      },\n      exportAs: [\"nzWave\"]\n    });\n  }\n  return NzWaveDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzWaveModule = /*#__PURE__*/(() => {\n  class NzWaveModule {\n    static #_ = this.ɵfac = function NzWaveModule_Factory(t) {\n      return new (t || NzWaveModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzWaveModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [provideNzWave(NZ_WAVE_GLOBAL_DEFAULT_CONFIG)],\n      imports: [PlatformModule]\n    });\n  }\n  return NzWaveModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_WAVE_GLOBAL_CONFIG, NZ_WAVE_GLOBAL_DEFAULT_CONFIG, NzWaveDirective, NzWaveModule, NzWaveRenderer, provideNzWave };\n//# sourceMappingURL=ng-zorro-antd-core-wave.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}