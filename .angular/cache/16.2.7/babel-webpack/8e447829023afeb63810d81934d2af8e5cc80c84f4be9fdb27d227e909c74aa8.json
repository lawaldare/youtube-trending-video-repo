{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { ReplaySubject, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzFormItemFeedbackIconComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.iconType);\n  }\n}\nlet NzFormStatusService = /*#__PURE__*/(() => {\n  class NzFormStatusService {\n    constructor() {\n      this.formStatusChanges = new ReplaySubject(1);\n    }\n    static #_ = this.ɵfac = function NzFormStatusService_Factory(t) {\n      return new (t || NzFormStatusService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzFormStatusService,\n      factory: NzFormStatusService.ɵfac\n    });\n  }\n  return NzFormStatusService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Used in input-group/input-number-group to make sure components in addon work well\nlet NzFormNoStatusService = /*#__PURE__*/(() => {\n  class NzFormNoStatusService {\n    constructor() {\n      this.noFormStatus = new BehaviorSubject(false);\n    }\n    static #_ = this.ɵfac = function NzFormNoStatusService_Factory(t) {\n      return new (t || NzFormNoStatusService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzFormNoStatusService,\n      factory: NzFormNoStatusService.ɵfac\n    });\n  }\n  return NzFormNoStatusService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n};\nlet NzFormItemFeedbackIconComponent = /*#__PURE__*/(() => {\n  class NzFormItemFeedbackIconComponent {\n    constructor(cdr) {\n      this.cdr = cdr;\n      this.status = '';\n      this.iconType = null;\n    }\n    ngOnChanges(_changes) {\n      this.updateIcon();\n    }\n    updateIcon() {\n      this.iconType = this.status ? iconTypeMap[this.status] : null;\n      this.cdr.markForCheck();\n    }\n    static #_ = this.ɵfac = function NzFormItemFeedbackIconComponent_Factory(t) {\n      return new (t || NzFormItemFeedbackIconComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzFormItemFeedbackIconComponent,\n      selectors: [[\"nz-form-item-feedback-icon\"]],\n      hostAttrs: [1, \"ant-form-item-feedback-icon\"],\n      hostVars: 8,\n      hostBindings: function NzFormItemFeedbackIconComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-form-item-feedback-icon-error\", ctx.status === \"error\")(\"ant-form-item-feedback-icon-warning\", ctx.status === \"warning\")(\"ant-form-item-feedback-icon-success\", ctx.status === \"success\")(\"ant-form-item-feedback-icon-validating\", ctx.status === \"validating\");\n        }\n      },\n      inputs: {\n        status: \"status\"\n      },\n      exportAs: [\"nzFormFeedbackIcon\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n      template: function NzFormItemFeedbackIconComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzFormItemFeedbackIconComponent_span_0_Template, 1, 1, \"span\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.iconType);\n        }\n      },\n      dependencies: [i1.NgIf, i2.NzIconDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzFormItemFeedbackIconComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzFormPatchModule = /*#__PURE__*/(() => {\n  class NzFormPatchModule {\n    static #_ = this.ɵfac = function NzFormPatchModule_Factory(t) {\n      return new (t || NzFormPatchModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzFormPatchModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, NzIconModule]\n    });\n  }\n  return NzFormPatchModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule, NzFormStatusService };\n//# sourceMappingURL=ng-zorro-antd-core-form.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}