{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, EventEmitter, Output, ViewChild, TemplateRef, Optional, Host, forwardRef, ElementRef, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, fromEvent, BehaviorSubject, of, combineLatest, merge } from 'rxjs';\nimport * as i2$2 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { takeUntil, startWith, distinctUntilChanged, withLatestFrom, map, switchMap } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport * as i2$1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i4 from 'ng-zorro-antd/core/transition-patch';\nimport { ɵNzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport * as i1$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { __decorate } from 'tslib';\nimport { InputBoolean, isNotNil, getStatusClassNames } from 'ng-zorro-antd/core/util';\nimport { BACKSPACE, ESCAPE, TAB, SPACE, ENTER, DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport * as i9 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3$1 from '@angular/forms';\nimport { COMPOSITION_BUFFER_MODE, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2$3 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i10 from 'ng-zorro-antd/core/overlay';\nimport { getPlacementName, POSITION_MAP, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport * as i1$2 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i6 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i3$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i7 from 'ng-zorro-antd/core/form';\nimport { NzFormPatchModule } from 'ng-zorro-antd/core/form';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"*\"];\nfunction NzOptionItemComponent_ng_template_1_ng_template_0_Template(rf, ctx) {}\nfunction NzOptionItemComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzOptionItemComponent_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template);\n  }\n}\nfunction NzOptionItemComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r2.label);\n  }\n}\nfunction NzOptionItemComponent_div_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\nfunction NzOptionItemComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, NzOptionItemComponent_div_4_span_1_Template, 1, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.icon)(\"ngIfElse\", ctx_r3.icon);\n  }\n}\nfunction NzOptionItemGroupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.nzLabel);\n  }\n}\nfunction NzOptionContainerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"nz-embed-empty\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"specificContent\", ctx_r0.notFoundContent);\n  }\n}\nfunction NzOptionContainerComponent_ng_template_3_nz_option_item_group_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-option-item-group\", 9);\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"nzLabel\", item_r3.groupLabel);\n  }\n}\nfunction NzOptionContainerComponent_ng_template_3_nz_option_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-option-item\", 10);\n    i0.ɵɵlistener(\"itemHover\", function NzOptionContainerComponent_ng_template_3_nz_option_item_2_Template_nz_option_item_itemHover_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onItemHover($event));\n    })(\"itemClick\", function NzOptionContainerComponent_ng_template_3_nz_option_item_2_Template_nz_option_item_itemClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.onItemClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r5.menuItemSelectedIcon)(\"customContent\", item_r3.nzCustomContent)(\"template\", item_r3.template)(\"grouped\", !!item_r3.groupLabel)(\"disabled\", item_r3.nzDisabled)(\"showState\", ctx_r5.mode === \"tags\" || ctx_r5.mode === \"multiple\")(\"title\", item_r3.nzTitle)(\"label\", item_r3.nzLabel)(\"compareWith\", ctx_r5.compareWith)(\"activatedValue\", ctx_r5.activatedValue)(\"listOfSelectedValue\", ctx_r5.listOfSelectedValue)(\"value\", item_r3.nzValue);\n  }\n}\nfunction NzOptionContainerComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 6);\n    i0.ɵɵtemplate(1, NzOptionContainerComponent_ng_template_3_nz_option_item_group_1_Template, 1, 1, \"nz-option-item-group\", 7);\n    i0.ɵɵtemplate(2, NzOptionContainerComponent_ng_template_3_nz_option_item_2_Template, 1, 12, \"nz-option-item\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngSwitch\", item_r3.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"group\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"item\");\n  }\n}\nfunction NzOptionContainerComponent_ng_template_4_Template(rf, ctx) {}\nfunction NzOptionComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"inputElement\"];\nconst _c2 = [\"mirrorElement\"];\nfunction NzSelectSearchComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 3, 4);\n  }\n}\nfunction NzSelectItemComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.label);\n  }\n}\nfunction NzSelectItemComponent_ng_container_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate(ctx_r4.label);\n  }\n}\nfunction NzSelectItemComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzSelectItemComponent_ng_container_0_div_1_Template, 2, 1, \"div\", 2);\n    i0.ɵɵtemplate(2, NzSelectItemComponent_ng_container_0_ng_template_2_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(3);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.deletable)(\"ngIfElse\", _r3);\n  }\n}\nfunction NzSelectItemComponent_span_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\nfunction NzSelectItemComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵlistener(\"click\", function NzSelectItemComponent_span_1_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onDelete($event));\n    });\n    i0.ɵɵtemplate(1, NzSelectItemComponent_span_1_span_1_Template, 1, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.removeIcon)(\"ngIfElse\", ctx_r1.removeIcon);\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction NzSelectPlaceholderComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.placeholder, \" \");\n  }\n}\nfunction NzSelectTopControlComponent_ng_container_1_nz_select_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-item\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"deletable\", false)(\"disabled\", false)(\"removeIcon\", ctx_r3.removeIcon)(\"label\", ctx_r3.listOfTopItem[0].nzLabel)(\"contentTemplateOutlet\", ctx_r3.customTemplate)(\"contentTemplateOutletContext\", ctx_r3.listOfTopItem[0]);\n  }\n}\nfunction NzSelectTopControlComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"nz-select-search\", 4);\n    i0.ɵɵlistener(\"isComposingChange\", function NzSelectTopControlComponent_ng_container_1_Template_nz_select_search_isComposingChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.isComposingChange($event));\n    })(\"valueChange\", function NzSelectTopControlComponent_ng_container_1_Template_nz_select_search_valueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onInputValueChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NzSelectTopControlComponent_ng_container_1_nz_select_item_2_Template, 1, 6, \"nz-select-item\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzId\", ctx_r0.nzId)(\"disabled\", ctx_r0.disabled)(\"value\", ctx_r0.inputValue)(\"showInput\", ctx_r0.showSearch)(\"mirrorSync\", false)(\"autofocus\", ctx_r0.autofocus)(\"focusTrigger\", ctx_r0.open);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isShowSingleLabel);\n  }\n}\nfunction NzSelectTopControlComponent_ng_container_2_nz_select_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-select-item\", 9);\n    i0.ɵɵlistener(\"delete\", function NzSelectTopControlComponent_ng_container_2_nz_select_item_1_Template_nz_select_item_delete_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const item_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.onDeleteItem(item_r8.contentTemplateOutletContext));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"removeIcon\", ctx_r7.removeIcon)(\"label\", item_r8.nzLabel)(\"disabled\", item_r8.nzDisabled || ctx_r7.disabled)(\"contentTemplateOutlet\", item_r8.contentTemplateOutlet)(\"deletable\", true)(\"contentTemplateOutletContext\", item_r8.contentTemplateOutletContext);\n  }\n}\nfunction NzSelectTopControlComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzSelectTopControlComponent_ng_container_2_nz_select_item_1_Template, 1, 6, \"nz-select-item\", 7);\n    i0.ɵɵelementStart(2, \"nz-select-search\", 8);\n    i0.ɵɵlistener(\"isComposingChange\", function NzSelectTopControlComponent_ng_container_2_Template_nz_select_search_isComposingChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.isComposingChange($event));\n    })(\"valueChange\", function NzSelectTopControlComponent_ng_container_2_Template_nz_select_search_valueChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onInputValueChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.listOfSlicedItem)(\"ngForTrackBy\", ctx_r1.trackValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzId\", ctx_r1.nzId)(\"disabled\", ctx_r1.disabled)(\"value\", ctx_r1.inputValue)(\"autofocus\", ctx_r1.autofocus)(\"showInput\", true)(\"mirrorSync\", true)(\"focusTrigger\", ctx_r1.open);\n  }\n}\nfunction NzSelectTopControlComponent_nz_select_placeholder_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-placeholder\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"placeholder\", ctx_r2.placeHolder);\n  }\n}\nfunction NzSelectClearComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 1);\n  }\n}\nfunction NzSelectArrowComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 3);\n  }\n}\nfunction NzSelectArrowComponent_ng_template_1_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n}\nfunction NzSelectArrowComponent_ng_template_1_ng_container_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n  }\n}\nfunction NzSelectArrowComponent_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzSelectArrowComponent_ng_template_1_ng_container_0_span_1_Template, 1, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, NzSelectArrowComponent_ng_template_1_ng_container_0_span_2_Template, 1, 0, \"span\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.search);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.search);\n  }\n}\nfunction NzSelectArrowComponent_ng_template_1_ng_template_1_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n  if (rf & 2) {\n    const suffixIcon_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"nzType\", suffixIcon_r10);\n  }\n}\nfunction NzSelectArrowComponent_ng_template_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzSelectArrowComponent_ng_template_1_ng_template_1_ng_container_0_span_1_Template, 1, 1, \"span\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const suffixIcon_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", suffixIcon_r10);\n  }\n}\nfunction NzSelectArrowComponent_ng_template_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSelectArrowComponent_ng_template_1_ng_template_1_ng_container_0_Template, 2, 1, \"ng-container\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r6.suffixIcon);\n  }\n}\nfunction NzSelectArrowComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSelectArrowComponent_ng_template_1_ng_container_0_Template, 3, 2, \"ng-container\", 4);\n    i0.ɵɵtemplate(1, NzSelectArrowComponent_ng_template_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const _r5 = i0.ɵɵreference(2);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showArrow && !ctx_r2.suffixIcon)(\"ngIfElse\", _r5);\n  }\n}\nfunction NzSelectArrowComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.feedbackIcon);\n  }\n}\nfunction NzSelectComponent_nz_select_arrow_2_ng_template_1_nz_form_item_feedback_icon_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-form-item-feedback-icon\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"status\", ctx_r6.status);\n  }\n}\nfunction NzSelectComponent_nz_select_arrow_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSelectComponent_nz_select_arrow_2_ng_template_1_nz_form_item_feedback_icon_0_Template, 1, 1, \"nz-form-item-feedback-icon\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.hasFeedback && !!ctx_r5.status);\n  }\n}\nfunction NzSelectComponent_nz_select_arrow_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nz-select-arrow\", 5);\n    i0.ɵɵtemplate(1, NzSelectComponent_nz_select_arrow_2_ng_template_1_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(2);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showArrow\", ctx_r1.nzShowArrow)(\"loading\", ctx_r1.nzLoading)(\"search\", ctx_r1.nzOpen && ctx_r1.nzShowSearch)(\"suffixIcon\", ctx_r1.nzSuffixIcon)(\"feedbackIcon\", _r4);\n  }\n}\nfunction NzSelectComponent_nz_select_clear_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-select-clear\", 9);\n    i0.ɵɵlistener(\"clear\", function NzSelectComponent_nz_select_clear_3_Template_nz_select_clear_clear_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onClearSelection());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"clearIcon\", ctx_r2.nzClearIcon);\n  }\n}\nfunction NzSelectComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-option-container\", 10);\n    i0.ɵɵlistener(\"keydown\", function NzSelectComponent_ng_template_4_Template_nz_option_container_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onKeyDown($event));\n    })(\"itemClick\", function NzSelectComponent_ng_template_4_Template_nz_option_container_itemClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onItemClick($event));\n    })(\"scrollToBottom\", function NzSelectComponent_ng_template_4_Template_nz_option_container_scrollToBottom_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.nzScrollToBottom.emit());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-select-dropdown-placement-bottomLeft\", ctx_r3.dropDownPosition === \"bottomLeft\")(\"ant-select-dropdown-placement-topLeft\", ctx_r3.dropDownPosition === \"topLeft\")(\"ant-select-dropdown-placement-bottomRight\", ctx_r3.dropDownPosition === \"bottomRight\")(\"ant-select-dropdown-placement-topRight\", ctx_r3.dropDownPosition === \"topRight\");\n    i0.ɵɵproperty(\"ngStyle\", ctx_r3.nzDropdownStyle)(\"itemSize\", ctx_r3.nzOptionHeightPx)(\"maxItemLength\", ctx_r3.nzOptionOverflowSize)(\"matchWidth\", ctx_r3.nzDropdownMatchSelectWidth)(\"@slideMotion\", \"enter\")(\"@.disabled\", !!(ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation))(\"nzNoAnimation\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)(\"listOfContainerItem\", ctx_r3.listOfContainerItem)(\"menuItemSelectedIcon\", ctx_r3.nzMenuItemSelectedIcon)(\"notFoundContent\", ctx_r3.nzNotFoundContent)(\"activatedValue\", ctx_r3.activatedValue)(\"listOfSelectedValue\", ctx_r3.listOfValue)(\"dropdownRender\", ctx_r3.nzDropdownRender)(\"compareWith\", ctx_r3.compareWith)(\"mode\", ctx_r3.nzMode);\n  }\n}\nlet NzOptionGroupComponent = /*#__PURE__*/(() => {\n  class NzOptionGroupComponent {\n    constructor() {\n      this.nzLabel = null;\n      this.changes = new Subject();\n    }\n    ngOnChanges() {\n      this.changes.next();\n    }\n    static #_ = this.ɵfac = function NzOptionGroupComponent_Factory(t) {\n      return new (t || NzOptionGroupComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzOptionGroupComponent,\n      selectors: [[\"nz-option-group\"]],\n      inputs: {\n        nzLabel: \"nzLabel\"\n      },\n      exportAs: [\"nzOptionGroup\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function NzOptionGroupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzOptionGroupComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzOptionItemComponent = /*#__PURE__*/(() => {\n  class NzOptionItemComponent {\n    constructor(elementRef, ngZone, destroy$) {\n      this.elementRef = elementRef;\n      this.ngZone = ngZone;\n      this.destroy$ = destroy$;\n      this.selected = false;\n      this.activated = false;\n      this.grouped = false;\n      this.customContent = false;\n      this.template = null;\n      this.disabled = false;\n      this.showState = false;\n      this.label = null;\n      this.value = null;\n      this.activatedValue = null;\n      this.listOfSelectedValue = [];\n      this.icon = null;\n      this.itemClick = new EventEmitter();\n      this.itemHover = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n      const {\n        value,\n        activatedValue,\n        listOfSelectedValue\n      } = changes;\n      if (value || listOfSelectedValue) {\n        this.selected = this.listOfSelectedValue.some(v => this.compareWith(v, this.value));\n      }\n      if (value || activatedValue) {\n        this.activated = this.compareWith(this.activatedValue, this.value);\n      }\n    }\n    ngOnInit() {\n      this.ngZone.runOutsideAngular(() => {\n        fromEvent(this.elementRef.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(() => {\n          if (!this.disabled) {\n            this.ngZone.run(() => this.itemClick.emit(this.value));\n          }\n        });\n        fromEvent(this.elementRef.nativeElement, 'mouseenter').pipe(takeUntil(this.destroy$)).subscribe(() => {\n          if (!this.disabled) {\n            this.ngZone.run(() => this.itemHover.emit(this.value));\n          }\n        });\n      });\n    }\n    static #_ = this.ɵfac = function NzOptionItemComponent_Factory(t) {\n      return new (t || NzOptionItemComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.NzDestroyService));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzOptionItemComponent,\n      selectors: [[\"nz-option-item\"]],\n      hostAttrs: [1, \"ant-select-item\", \"ant-select-item-option\"],\n      hostVars: 9,\n      hostBindings: function NzOptionItemComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"title\", ctx.title);\n          i0.ɵɵclassProp(\"ant-select-item-option-grouped\", ctx.grouped)(\"ant-select-item-option-selected\", ctx.selected && !ctx.disabled)(\"ant-select-item-option-disabled\", ctx.disabled)(\"ant-select-item-option-active\", ctx.activated && !ctx.disabled);\n        }\n      },\n      inputs: {\n        grouped: \"grouped\",\n        customContent: \"customContent\",\n        template: \"template\",\n        disabled: \"disabled\",\n        showState: \"showState\",\n        title: \"title\",\n        label: \"label\",\n        value: \"value\",\n        activatedValue: \"activatedValue\",\n        listOfSelectedValue: \"listOfSelectedValue\",\n        icon: \"icon\",\n        compareWith: \"compareWith\"\n      },\n      outputs: {\n        itemClick: \"itemClick\",\n        itemHover: \"itemHover\"\n      },\n      features: [i0.ɵɵProvidersFeature([NzDestroyService]), i0.ɵɵNgOnChangesFeature],\n      decls: 5,\n      vars: 3,\n      consts: [[1, \"ant-select-item-option-content\"], [3, \"ngIf\", \"ngIfElse\"], [\"noCustomContent\", \"\"], [\"class\", \"ant-select-item-option-state\", \"style\", \"user-select: none\", \"unselectable\", \"on\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [\"unselectable\", \"on\", 1, \"ant-select-item-option-state\", 2, \"user-select\", \"none\"], [\"nz-icon\", \"\", \"nzType\", \"check\", \"class\", \"ant-select-selected-icon\", 4, \"ngIf\", \"ngIfElse\"], [\"nz-icon\", \"\", \"nzType\", \"check\", 1, \"ant-select-selected-icon\"]],\n      template: function NzOptionItemComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, NzOptionItemComponent_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n          i0.ɵɵtemplate(2, NzOptionItemComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, NzOptionItemComponent_div_4_Template, 2, 2, \"div\", 3);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(3);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.customContent)(\"ngIfElse\", _r1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.showState && ctx.selected);\n        }\n      },\n      dependencies: [i2.NgIf, i2.NgTemplateOutlet, i2$1.NzIconDirective, i4.ɵNzTransitionPatchDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzOptionItemComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzOptionItemGroupComponent = /*#__PURE__*/(() => {\n  class NzOptionItemGroupComponent {\n    constructor() {\n      this.nzLabel = null;\n    }\n    static #_ = this.ɵfac = function NzOptionItemGroupComponent_Factory(t) {\n      return new (t || NzOptionItemGroupComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzOptionItemGroupComponent,\n      selectors: [[\"nz-option-item-group\"]],\n      hostAttrs: [1, \"ant-select-item\", \"ant-select-item-group\"],\n      inputs: {\n        nzLabel: \"nzLabel\"\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[4, \"nzStringTemplateOutlet\"]],\n      template: function NzOptionItemGroupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzOptionItemGroupComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzLabel);\n        }\n      },\n      dependencies: [i1$1.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzOptionItemGroupComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzOptionContainerComponent = /*#__PURE__*/(() => {\n  class NzOptionContainerComponent {\n    constructor() {\n      this.notFoundContent = undefined;\n      this.menuItemSelectedIcon = null;\n      this.dropdownRender = null;\n      this.activatedValue = null;\n      this.listOfSelectedValue = [];\n      this.mode = 'default';\n      this.matchWidth = true;\n      this.itemSize = 32;\n      this.maxItemLength = 8;\n      this.listOfContainerItem = [];\n      this.itemClick = new EventEmitter();\n      this.scrollToBottom = new EventEmitter();\n      this.scrolledIndex = 0;\n    }\n    onItemClick(value) {\n      this.itemClick.emit(value);\n    }\n    onItemHover(value) {\n      // TODO: keydown.enter won't activate this value\n      this.activatedValue = value;\n    }\n    trackValue(_index, option) {\n      return option.key;\n    }\n    onScrolledIndexChange(index) {\n      this.scrolledIndex = index;\n      if (index === this.listOfContainerItem.length - this.maxItemLength) {\n        this.scrollToBottom.emit();\n      }\n    }\n    scrollToActivatedValue() {\n      const index = this.listOfContainerItem.findIndex(item => this.compareWith(item.key, this.activatedValue));\n      if (index < this.scrolledIndex || index >= this.scrolledIndex + this.maxItemLength) {\n        this.cdkVirtualScrollViewport.scrollToIndex(index || 0);\n      }\n    }\n    ngOnChanges(changes) {\n      const {\n        listOfContainerItem,\n        activatedValue\n      } = changes;\n      if (listOfContainerItem || activatedValue) {\n        this.scrollToActivatedValue();\n      }\n    }\n    ngAfterViewInit() {\n      setTimeout(() => this.scrollToActivatedValue());\n    }\n    static #_ = this.ɵfac = function NzOptionContainerComponent_Factory(t) {\n      return new (t || NzOptionContainerComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzOptionContainerComponent,\n      selectors: [[\"nz-option-container\"]],\n      viewQuery: function NzOptionContainerComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkVirtualScrollViewport, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkVirtualScrollViewport = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ant-select-dropdown\"],\n      inputs: {\n        notFoundContent: \"notFoundContent\",\n        menuItemSelectedIcon: \"menuItemSelectedIcon\",\n        dropdownRender: \"dropdownRender\",\n        activatedValue: \"activatedValue\",\n        listOfSelectedValue: \"listOfSelectedValue\",\n        compareWith: \"compareWith\",\n        mode: \"mode\",\n        matchWidth: \"matchWidth\",\n        itemSize: \"itemSize\",\n        maxItemLength: \"maxItemLength\",\n        listOfContainerItem: \"listOfContainerItem\"\n      },\n      outputs: {\n        itemClick: \"itemClick\",\n        scrollToBottom: \"scrollToBottom\"\n      },\n      exportAs: [\"nzOptionContainer\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 5,\n      vars: 14,\n      consts: [[\"class\", \"ant-select-item-empty\", 4, \"ngIf\"], [3, \"itemSize\", \"maxBufferPx\", \"minBufferPx\", \"scrolledIndexChange\"], [\"cdkVirtualFor\", \"\", 3, \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplateCacheSize\"], [3, \"ngTemplateOutlet\"], [1, \"ant-select-item-empty\"], [\"nzComponentName\", \"select\", 3, \"specificContent\"], [3, \"ngSwitch\"], [3, \"nzLabel\", 4, \"ngSwitchCase\"], [3, \"icon\", \"customContent\", \"template\", \"grouped\", \"disabled\", \"showState\", \"title\", \"label\", \"compareWith\", \"activatedValue\", \"listOfSelectedValue\", \"value\", \"itemHover\", \"itemClick\", 4, \"ngSwitchCase\"], [3, \"nzLabel\"], [3, \"icon\", \"customContent\", \"template\", \"grouped\", \"disabled\", \"showState\", \"title\", \"label\", \"compareWith\", \"activatedValue\", \"listOfSelectedValue\", \"value\", \"itemHover\", \"itemClick\"]],\n      template: function NzOptionContainerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵtemplate(1, NzOptionContainerComponent_div_1_Template, 2, 1, \"div\", 0);\n          i0.ɵɵelementStart(2, \"cdk-virtual-scroll-viewport\", 1);\n          i0.ɵɵlistener(\"scrolledIndexChange\", function NzOptionContainerComponent_Template_cdk_virtual_scroll_viewport_scrolledIndexChange_2_listener($event) {\n            return ctx.onScrolledIndexChange($event);\n          });\n          i0.ɵɵtemplate(3, NzOptionContainerComponent_ng_template_3_Template, 3, 3, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, NzOptionContainerComponent_ng_template_4_Template, 0, 0, \"ng-template\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.listOfContainerItem.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleProp(\"height\", ctx.listOfContainerItem.length * ctx.itemSize, \"px\")(\"max-height\", ctx.itemSize * ctx.maxItemLength, \"px\");\n          i0.ɵɵclassProp(\"full-width\", !ctx.matchWidth);\n          i0.ɵɵproperty(\"itemSize\", ctx.itemSize)(\"maxBufferPx\", ctx.itemSize * ctx.maxItemLength)(\"minBufferPx\", ctx.itemSize * ctx.maxItemLength);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"cdkVirtualForOf\", ctx.listOfContainerItem)(\"cdkVirtualForTrackBy\", ctx.trackValue)(\"cdkVirtualForTemplateCacheSize\", 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.dropdownRender);\n        }\n      },\n      dependencies: [i2.NgIf, i2.NgTemplateOutlet, i2.NgSwitch, i2.NgSwitchCase, i2$2.CdkFixedSizeVirtualScroll, i2$2.CdkVirtualForOf, i2$2.CdkVirtualScrollViewport, i3.NzEmbedEmptyComponent, NzOptionItemComponent, NzOptionItemGroupComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzOptionContainerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzOptionComponent = /*#__PURE__*/(() => {\n  class NzOptionComponent {\n    constructor(nzOptionGroupComponent, destroy$) {\n      this.nzOptionGroupComponent = nzOptionGroupComponent;\n      this.destroy$ = destroy$;\n      this.changes = new Subject();\n      this.groupLabel = null;\n      this.nzLabel = null;\n      this.nzValue = null;\n      this.nzDisabled = false;\n      this.nzHide = false;\n      this.nzCustomContent = false;\n    }\n    ngOnInit() {\n      if (this.nzOptionGroupComponent) {\n        this.nzOptionGroupComponent.changes.pipe(startWith(true), takeUntil(this.destroy$)).subscribe(() => {\n          this.groupLabel = this.nzOptionGroupComponent.nzLabel;\n        });\n      }\n    }\n    ngOnChanges() {\n      this.changes.next();\n    }\n    static #_ = this.ɵfac = function NzOptionComponent_Factory(t) {\n      return new (t || NzOptionComponent)(i0.ɵɵdirectiveInject(NzOptionGroupComponent, 8), i0.ɵɵdirectiveInject(i1.NzDestroyService));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzOptionComponent,\n      selectors: [[\"nz-option\"]],\n      viewQuery: function NzOptionComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        }\n      },\n      inputs: {\n        nzTitle: \"nzTitle\",\n        nzLabel: \"nzLabel\",\n        nzValue: \"nzValue\",\n        nzKey: \"nzKey\",\n        nzDisabled: \"nzDisabled\",\n        nzHide: \"nzHide\",\n        nzCustomContent: \"nzCustomContent\"\n      },\n      exportAs: [\"nzOption\"],\n      features: [i0.ɵɵProvidersFeature([NzDestroyService]), i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function NzOptionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzOptionComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzOptionComponent.prototype, \"nzDisabled\", void 0);\n  __decorate([InputBoolean()], NzOptionComponent.prototype, \"nzHide\", void 0);\n  __decorate([InputBoolean()], NzOptionComponent.prototype, \"nzCustomContent\", void 0);\n  return NzOptionComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzSelectSearchComponent = /*#__PURE__*/(() => {\n  class NzSelectSearchComponent {\n    setCompositionState(isComposing) {\n      this.isComposingChange.next(isComposing);\n    }\n    onValueChange(value) {\n      this.value = value;\n      this.valueChange.next(value);\n      if (this.mirrorSync) {\n        this.syncMirrorWidth();\n      }\n    }\n    clearInputValue() {\n      const inputDOM = this.inputElement.nativeElement;\n      inputDOM.value = '';\n      this.onValueChange('');\n    }\n    syncMirrorWidth() {\n      const mirrorDOM = this.mirrorElement.nativeElement;\n      const hostDOM = this.elementRef.nativeElement;\n      const inputDOM = this.inputElement.nativeElement;\n      this.renderer.removeStyle(hostDOM, 'width');\n      this.renderer.setProperty(mirrorDOM, 'textContent', `${inputDOM.value}\\u00a0`);\n      this.renderer.setStyle(hostDOM, 'width', `${mirrorDOM.scrollWidth}px`);\n    }\n    focus() {\n      this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n    blur() {\n      this.inputElement.nativeElement.blur();\n    }\n    constructor(elementRef, renderer, focusMonitor) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.focusMonitor = focusMonitor;\n      this.nzId = null;\n      this.disabled = false;\n      this.mirrorSync = false;\n      this.showInput = true;\n      this.focusTrigger = false;\n      this.value = '';\n      this.autofocus = false;\n      this.valueChange = new EventEmitter();\n      this.isComposingChange = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n      const inputDOM = this.inputElement.nativeElement;\n      const {\n        focusTrigger,\n        showInput\n      } = changes;\n      if (showInput) {\n        if (this.showInput) {\n          this.renderer.removeAttribute(inputDOM, 'readonly');\n        } else {\n          this.renderer.setAttribute(inputDOM, 'readonly', 'readonly');\n        }\n      }\n      // IE11 cannot input value if focused before removing readonly\n      if (focusTrigger && focusTrigger.currentValue === true && focusTrigger.previousValue === false) {\n        inputDOM.focus();\n      }\n    }\n    ngAfterViewInit() {\n      if (this.mirrorSync) {\n        this.syncMirrorWidth();\n      }\n      if (this.autofocus) {\n        this.focus();\n      }\n    }\n    static #_ = this.ɵfac = function NzSelectSearchComponent_Factory(t) {\n      return new (t || NzSelectSearchComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1$2.FocusMonitor));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSelectSearchComponent,\n      selectors: [[\"nz-select-search\"]],\n      viewQuery: function NzSelectSearchComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mirrorElement = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ant-select-selection-search\"],\n      inputs: {\n        nzId: \"nzId\",\n        disabled: \"disabled\",\n        mirrorSync: \"mirrorSync\",\n        showInput: \"showInput\",\n        focusTrigger: \"focusTrigger\",\n        value: \"value\",\n        autofocus: \"autofocus\"\n      },\n      outputs: {\n        valueChange: \"valueChange\",\n        isComposingChange: \"isComposingChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: COMPOSITION_BUFFER_MODE,\n        useValue: false\n      }]), i0.ɵɵNgOnChangesFeature],\n      decls: 3,\n      vars: 7,\n      consts: [[\"autocomplete\", \"off\", 1, \"ant-select-selection-search-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"compositionstart\", \"compositionend\"], [\"inputElement\", \"\"], [\"class\", \"ant-select-selection-search-mirror\", 4, \"ngIf\"], [1, \"ant-select-selection-search-mirror\"], [\"mirrorElement\", \"\"]],\n      template: function NzSelectSearchComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"input\", 0, 1);\n          i0.ɵɵlistener(\"ngModelChange\", function NzSelectSearchComponent_Template_input_ngModelChange_0_listener($event) {\n            return ctx.onValueChange($event);\n          })(\"compositionstart\", function NzSelectSearchComponent_Template_input_compositionstart_0_listener() {\n            return ctx.setCompositionState(true);\n          })(\"compositionend\", function NzSelectSearchComponent_Template_input_compositionend_0_listener() {\n            return ctx.setCompositionState(false);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, NzSelectSearchComponent_span_2_Template, 2, 0, \"span\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"opacity\", ctx.showInput ? null : 0);\n          i0.ɵɵproperty(\"ngModel\", ctx.value)(\"disabled\", ctx.disabled);\n          i0.ɵɵattribute(\"id\", ctx.nzId)(\"autofocus\", ctx.autofocus ? \"autofocus\" : null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.mirrorSync);\n        }\n      },\n      dependencies: [i2.NgIf, i3$1.DefaultValueAccessor, i3$1.NgControlStatus, i3$1.NgModel],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSelectSearchComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSelectItemComponent = /*#__PURE__*/(() => {\n  class NzSelectItemComponent {\n    constructor() {\n      this.disabled = false;\n      this.label = null;\n      this.deletable = false;\n      this.removeIcon = null;\n      this.contentTemplateOutletContext = null;\n      this.contentTemplateOutlet = null;\n      this.delete = new EventEmitter();\n    }\n    onDelete(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (!this.disabled) {\n        this.delete.next(e);\n      }\n    }\n    static #_ = this.ɵfac = function NzSelectItemComponent_Factory(t) {\n      return new (t || NzSelectItemComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSelectItemComponent,\n      selectors: [[\"nz-select-item\"]],\n      hostAttrs: [1, \"ant-select-selection-item\"],\n      hostVars: 3,\n      hostBindings: function NzSelectItemComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"title\", ctx.label);\n          i0.ɵɵclassProp(\"ant-select-selection-item-disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        disabled: \"disabled\",\n        label: \"label\",\n        deletable: \"deletable\",\n        removeIcon: \"removeIcon\",\n        contentTemplateOutletContext: \"contentTemplateOutletContext\",\n        contentTemplateOutlet: \"contentTemplateOutlet\"\n      },\n      outputs: {\n        delete: \"delete\"\n      },\n      decls: 2,\n      vars: 5,\n      consts: [[4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"class\", \"ant-select-selection-item-remove\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ant-select-selection-item-content\", 4, \"ngIf\", \"ngIfElse\"], [\"labelTemplate\", \"\"], [1, \"ant-select-selection-item-content\"], [1, \"ant-select-selection-item-remove\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"close\", 4, \"ngIf\", \"ngIfElse\"], [\"nz-icon\", \"\", \"nzType\", \"close\"]],\n      template: function NzSelectItemComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzSelectItemComponent_ng_container_0_Template, 4, 2, \"ng-container\", 0);\n          i0.ɵɵtemplate(1, NzSelectItemComponent_span_1_Template, 2, 2, \"span\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.contentTemplateOutlet)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c3, ctx.contentTemplateOutletContext));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.deletable && !ctx.disabled);\n        }\n      },\n      dependencies: [i2.NgIf, i2$1.NzIconDirective, i1$1.NzStringTemplateOutletDirective, i4.ɵNzTransitionPatchDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSelectItemComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSelectPlaceholderComponent = /*#__PURE__*/(() => {\n  class NzSelectPlaceholderComponent {\n    constructor() {\n      this.placeholder = null;\n    }\n    static #_ = this.ɵfac = function NzSelectPlaceholderComponent_Factory(t) {\n      return new (t || NzSelectPlaceholderComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSelectPlaceholderComponent,\n      selectors: [[\"nz-select-placeholder\"]],\n      hostAttrs: [1, \"ant-select-selection-placeholder\"],\n      inputs: {\n        placeholder: \"placeholder\"\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[4, \"nzStringTemplateOutlet\"]],\n      template: function NzSelectPlaceholderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzSelectPlaceholderComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.placeholder);\n        }\n      },\n      dependencies: [i1$1.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSelectPlaceholderComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSelectTopControlComponent = /*#__PURE__*/(() => {\n  class NzSelectTopControlComponent {\n    updateTemplateVariable() {\n      const isSelectedValueEmpty = this.listOfTopItem.length === 0;\n      this.isShowPlaceholder = isSelectedValueEmpty && !this.isComposing && !this.inputValue;\n      this.isShowSingleLabel = !isSelectedValueEmpty && !this.isComposing && !this.inputValue;\n    }\n    isComposingChange(isComposing) {\n      this.isComposing = isComposing;\n      this.updateTemplateVariable();\n    }\n    onInputValueChange(value) {\n      if (value !== this.inputValue) {\n        this.inputValue = value;\n        this.updateTemplateVariable();\n        this.inputValueChange.emit(value);\n        this.tokenSeparate(value, this.tokenSeparators);\n      }\n    }\n    tokenSeparate(inputValue, tokenSeparators) {\n      const includesSeparators = (str, separators) => {\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < separators.length; ++i) {\n          if (str.lastIndexOf(separators[i]) > 0) {\n            return true;\n          }\n        }\n        return false;\n      };\n      const splitBySeparators = (str, separators) => {\n        const reg = new RegExp(`[${separators.join()}]`);\n        const array = str.split(reg).filter(token => token);\n        return [...new Set(array)];\n      };\n      if (inputValue && inputValue.length && tokenSeparators.length && this.mode !== 'default' && includesSeparators(inputValue, tokenSeparators)) {\n        const listOfLabel = splitBySeparators(inputValue, tokenSeparators);\n        this.tokenize.next(listOfLabel);\n      }\n    }\n    clearInputValue() {\n      if (this.nzSelectSearchComponent) {\n        this.nzSelectSearchComponent.clearInputValue();\n      }\n    }\n    focus() {\n      if (this.nzSelectSearchComponent) {\n        this.nzSelectSearchComponent.focus();\n      }\n    }\n    blur() {\n      if (this.nzSelectSearchComponent) {\n        this.nzSelectSearchComponent.blur();\n      }\n    }\n    trackValue(_index, option) {\n      return option.nzValue;\n    }\n    onDeleteItem(item) {\n      if (!this.disabled && !item.nzDisabled) {\n        this.deleteItem.next(item);\n      }\n    }\n    constructor(elementRef, ngZone, noAnimation) {\n      this.elementRef = elementRef;\n      this.ngZone = ngZone;\n      this.noAnimation = noAnimation;\n      this.nzId = null;\n      this.showSearch = false;\n      this.placeHolder = null;\n      this.open = false;\n      this.maxTagCount = Infinity;\n      this.autofocus = false;\n      this.disabled = false;\n      this.mode = 'default';\n      this.customTemplate = null;\n      this.maxTagPlaceholder = null;\n      this.removeIcon = null;\n      this.listOfTopItem = [];\n      this.tokenSeparators = [];\n      this.tokenize = new EventEmitter();\n      this.inputValueChange = new EventEmitter();\n      this.deleteItem = new EventEmitter();\n      this.listOfSlicedItem = [];\n      this.isShowPlaceholder = true;\n      this.isShowSingleLabel = false;\n      this.isComposing = false;\n      this.inputValue = null;\n      this.destroy$ = new Subject();\n    }\n    ngOnChanges(changes) {\n      const {\n        listOfTopItem,\n        maxTagCount,\n        customTemplate,\n        maxTagPlaceholder\n      } = changes;\n      if (listOfTopItem) {\n        this.updateTemplateVariable();\n      }\n      if (listOfTopItem || maxTagCount || customTemplate || maxTagPlaceholder) {\n        const listOfSlicedItem = this.listOfTopItem.slice(0, this.maxTagCount).map(o => ({\n          nzLabel: o.nzLabel,\n          nzValue: o.nzValue,\n          nzDisabled: o.nzDisabled,\n          contentTemplateOutlet: this.customTemplate,\n          contentTemplateOutletContext: o\n        }));\n        if (this.listOfTopItem.length > this.maxTagCount) {\n          const exceededLabel = `+ ${this.listOfTopItem.length - this.maxTagCount} ...`;\n          const listOfSelectedValue = this.listOfTopItem.map(item => item.nzValue);\n          const exceededItem = {\n            nzLabel: exceededLabel,\n            nzValue: '$$__nz_exceeded_item',\n            nzDisabled: true,\n            contentTemplateOutlet: this.maxTagPlaceholder,\n            contentTemplateOutletContext: listOfSelectedValue.slice(this.maxTagCount)\n          };\n          listOfSlicedItem.push(exceededItem);\n        }\n        this.listOfSlicedItem = listOfSlicedItem;\n      }\n    }\n    ngOnInit() {\n      this.ngZone.runOutsideAngular(() => {\n        fromEvent(this.elementRef.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => {\n          // `HTMLElement.focus()` is a native DOM API which doesn't require Angular to run change detection.\n          if (event.target !== this.nzSelectSearchComponent.inputElement.nativeElement) {\n            this.nzSelectSearchComponent.focus();\n          }\n        });\n        fromEvent(this.elementRef.nativeElement, 'keydown').pipe(takeUntil(this.destroy$)).subscribe(event => {\n          if (event.target instanceof HTMLInputElement) {\n            const inputValue = event.target.value;\n            if (event.keyCode === BACKSPACE && this.mode !== 'default' && !inputValue && this.listOfTopItem.length > 0) {\n              event.preventDefault();\n              // Run change detection only if the user has pressed the `Backspace` key and the following condition is met.\n              this.ngZone.run(() => this.onDeleteItem(this.listOfTopItem[this.listOfTopItem.length - 1]));\n            }\n          }\n        });\n      });\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n    }\n    static #_ = this.ɵfac = function NzSelectTopControlComponent_Factory(t) {\n      return new (t || NzSelectTopControlComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i6.NzNoAnimationDirective, 9));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSelectTopControlComponent,\n      selectors: [[\"nz-select-top-control\"]],\n      viewQuery: function NzSelectTopControlComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(NzSelectSearchComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzSelectSearchComponent = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ant-select-selector\"],\n      inputs: {\n        nzId: \"nzId\",\n        showSearch: \"showSearch\",\n        placeHolder: \"placeHolder\",\n        open: \"open\",\n        maxTagCount: \"maxTagCount\",\n        autofocus: \"autofocus\",\n        disabled: \"disabled\",\n        mode: \"mode\",\n        customTemplate: \"customTemplate\",\n        maxTagPlaceholder: \"maxTagPlaceholder\",\n        removeIcon: \"removeIcon\",\n        listOfTopItem: \"listOfTopItem\",\n        tokenSeparators: \"tokenSeparators\"\n      },\n      outputs: {\n        tokenize: \"tokenize\",\n        inputValueChange: \"inputValueChange\",\n        deleteItem: \"deleteItem\"\n      },\n      exportAs: [\"nzSelectTopControl\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 4,\n      vars: 3,\n      consts: [[3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"placeholder\", 4, \"ngIf\"], [3, \"nzId\", \"disabled\", \"value\", \"showInput\", \"mirrorSync\", \"autofocus\", \"focusTrigger\", \"isComposingChange\", \"valueChange\"], [3, \"deletable\", \"disabled\", \"removeIcon\", \"label\", \"contentTemplateOutlet\", \"contentTemplateOutletContext\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"removeIcon\", \"label\", \"contentTemplateOutlet\", \"contentTemplateOutletContext\"], [3, \"removeIcon\", \"label\", \"disabled\", \"contentTemplateOutlet\", \"deletable\", \"contentTemplateOutletContext\", \"delete\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"nzId\", \"disabled\", \"value\", \"autofocus\", \"showInput\", \"mirrorSync\", \"focusTrigger\", \"isComposingChange\", \"valueChange\"], [3, \"removeIcon\", \"label\", \"disabled\", \"contentTemplateOutlet\", \"deletable\", \"contentTemplateOutletContext\", \"delete\"], [3, \"placeholder\"]],\n      template: function NzSelectTopControlComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainerStart(0, 0);\n          i0.ɵɵtemplate(1, NzSelectTopControlComponent_ng_container_1_Template, 3, 8, \"ng-container\", 1);\n          i0.ɵɵtemplate(2, NzSelectTopControlComponent_ng_container_2_Template, 3, 9, \"ng-container\", 2);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵtemplate(3, NzSelectTopControlComponent_nz_select_placeholder_3_Template, 1, 1, \"nz-select-placeholder\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngSwitch\", ctx.mode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", \"default\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isShowPlaceholder);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault, i4.ɵNzTransitionPatchDirective, NzSelectSearchComponent, NzSelectItemComponent, NzSelectPlaceholderComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSelectTopControlComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSelectClearComponent = /*#__PURE__*/(() => {\n  class NzSelectClearComponent {\n    constructor() {\n      this.clearIcon = null;\n      this.clear = new EventEmitter();\n    }\n    onClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.clear.emit(e);\n    }\n    static #_ = this.ɵfac = function NzSelectClearComponent_Factory(t) {\n      return new (t || NzSelectClearComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSelectClearComponent,\n      selectors: [[\"nz-select-clear\"]],\n      hostAttrs: [1, \"ant-select-clear\"],\n      hostBindings: function NzSelectClearComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NzSelectClearComponent_click_HostBindingHandler($event) {\n            return ctx.onClick($event);\n          });\n        }\n      },\n      inputs: {\n        clearIcon: \"clearIcon\"\n      },\n      outputs: {\n        clear: \"clear\"\n      },\n      decls: 1,\n      vars: 2,\n      consts: [[\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"nzTheme\", \"fill\", \"class\", \"ant-select-close-icon\", 4, \"ngIf\", \"ngIfElse\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"nzTheme\", \"fill\", 1, \"ant-select-close-icon\"]],\n      template: function NzSelectClearComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzSelectClearComponent_span_0_Template, 1, 0, \"span\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.clearIcon)(\"ngIfElse\", ctx.clearIcon);\n        }\n      },\n      dependencies: [i2.NgIf, i2$1.NzIconDirective, i4.ɵNzTransitionPatchDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSelectClearComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSelectArrowComponent = /*#__PURE__*/(() => {\n  class NzSelectArrowComponent {\n    constructor() {\n      this.loading = false;\n      this.search = false;\n      this.showArrow = false;\n      this.suffixIcon = null;\n      this.feedbackIcon = null;\n    }\n    static #_ = this.ɵfac = function NzSelectArrowComponent_Factory(t) {\n      return new (t || NzSelectArrowComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSelectArrowComponent,\n      selectors: [[\"nz-select-arrow\"]],\n      hostAttrs: [1, \"ant-select-arrow\"],\n      hostVars: 2,\n      hostBindings: function NzSelectArrowComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-select-arrow-loading\", ctx.loading);\n        }\n      },\n      inputs: {\n        loading: \"loading\",\n        search: \"search\",\n        showArrow: \"showArrow\",\n        suffixIcon: \"suffixIcon\",\n        feedbackIcon: \"feedbackIcon\"\n      },\n      decls: 4,\n      vars: 3,\n      consts: [[\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultArrow\", \"\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [4, \"ngIf\", \"ngIfElse\"], [\"suffixTemplate\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"search\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"down\"], [\"nz-icon\", \"\", \"nzType\", \"search\"], [\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n      template: function NzSelectArrowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzSelectArrowComponent_span_0_Template, 1, 0, \"span\", 0);\n          i0.ɵɵtemplate(1, NzSelectArrowComponent_ng_template_1_Template, 3, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(3, NzSelectArrowComponent_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading)(\"ngIfElse\", _r1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.feedbackIcon);\n        }\n      },\n      dependencies: [i2.NgIf, i2$1.NzIconDirective, i1$1.NzStringTemplateOutletDirective, i4.ɵNzTransitionPatchDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSelectArrowComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst defaultFilterOption = (searchValue, item) => {\n  if (item && item.nzLabel) {\n    return item.nzLabel.toString().toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n  } else {\n    return false;\n  }\n};\nconst NZ_CONFIG_MODULE_NAME = 'select';\nlet NzSelectComponent = /*#__PURE__*/(() => {\n  class NzSelectComponent {\n    set nzShowArrow(value) {\n      this._nzShowArrow = value;\n    }\n    get nzShowArrow() {\n      return this._nzShowArrow === undefined ? this.nzMode === 'default' : this._nzShowArrow;\n    }\n    generateTagItem(value) {\n      return {\n        nzValue: value,\n        nzLabel: value,\n        type: 'item'\n      };\n    }\n    onItemClick(value) {\n      this.activatedValue = value;\n      if (this.nzMode === 'default') {\n        if (this.listOfValue.length === 0 || !this.compareWith(this.listOfValue[0], value)) {\n          this.updateListOfValue([value]);\n        }\n        this.setOpenState(false);\n      } else {\n        const targetIndex = this.listOfValue.findIndex(o => this.compareWith(o, value));\n        if (targetIndex !== -1) {\n          const listOfValueAfterRemoved = this.listOfValue.filter((_, i) => i !== targetIndex);\n          this.updateListOfValue(listOfValueAfterRemoved);\n        } else if (this.listOfValue.length < this.nzMaxMultipleCount) {\n          const listOfValueAfterAdded = [...this.listOfValue, value];\n          this.updateListOfValue(listOfValueAfterAdded);\n        }\n        this.focus();\n        if (this.nzAutoClearSearchValue) {\n          this.clearInput();\n        }\n      }\n    }\n    onItemDelete(item) {\n      const listOfSelectedValue = this.listOfValue.filter(v => !this.compareWith(v, item.nzValue));\n      this.updateListOfValue(listOfSelectedValue);\n      this.clearInput();\n    }\n    updateListOfContainerItem() {\n      let listOfContainerItem = this.listOfTagAndTemplateItem.filter(item => !item.nzHide).filter(item => {\n        if (!this.nzServerSearch && this.searchValue) {\n          return this.nzFilterOption(this.searchValue, item);\n        } else {\n          return true;\n        }\n      });\n      if (this.nzMode === 'tags' && this.searchValue) {\n        const matchedItem = this.listOfTagAndTemplateItem.find(item => item.nzLabel === this.searchValue);\n        if (!matchedItem) {\n          const tagItem = this.generateTagItem(this.searchValue);\n          listOfContainerItem = [tagItem, ...listOfContainerItem];\n          this.activatedValue = tagItem.nzValue;\n        } else {\n          this.activatedValue = matchedItem.nzValue;\n        }\n      }\n      const activatedItem = listOfContainerItem.find(item => item.nzLabel === this.searchValue) || listOfContainerItem.find(item => this.compareWith(item.nzValue, this.activatedValue)) || listOfContainerItem.find(item => this.compareWith(item.nzValue, this.listOfValue[0])) || listOfContainerItem[0];\n      this.activatedValue = activatedItem && activatedItem.nzValue || null;\n      let listOfGroupLabel = [];\n      if (this.isReactiveDriven) {\n        listOfGroupLabel = [...new Set(this.nzOptions.filter(o => o.groupLabel).map(o => o.groupLabel))];\n      } else {\n        if (this.listOfNzOptionGroupComponent) {\n          listOfGroupLabel = this.listOfNzOptionGroupComponent.map(o => o.nzLabel);\n        }\n      }\n      /** insert group item **/\n      listOfGroupLabel.forEach(label => {\n        const index = listOfContainerItem.findIndex(item => label === item.groupLabel);\n        if (index > -1) {\n          const groupItem = {\n            groupLabel: label,\n            type: 'group',\n            key: label\n          };\n          listOfContainerItem.splice(index, 0, groupItem);\n        }\n      });\n      this.listOfContainerItem = [...listOfContainerItem];\n      this.updateCdkConnectedOverlayPositions();\n    }\n    clearInput() {\n      this.nzSelectTopControlComponent.clearInputValue();\n    }\n    updateListOfValue(listOfValue) {\n      const covertListToModel = (list, mode) => {\n        if (mode === 'default') {\n          if (list.length > 0) {\n            return list[0];\n          } else {\n            return null;\n          }\n        } else {\n          return list;\n        }\n      };\n      const model = covertListToModel(listOfValue, this.nzMode);\n      if (this.value !== model) {\n        this.listOfValue = listOfValue;\n        this.listOfValue$.next(listOfValue);\n        this.value = model;\n        this.onChange(this.value);\n      }\n    }\n    onTokenSeparate(listOfLabel) {\n      const listOfMatchedValue = this.listOfTagAndTemplateItem.filter(item => listOfLabel.findIndex(label => label === item.nzLabel) !== -1).map(item => item.nzValue).filter(item => this.listOfValue.findIndex(v => this.compareWith(v, item)) === -1);\n      if (this.nzMode === 'multiple') {\n        this.updateListOfValue([...this.listOfValue, ...listOfMatchedValue]);\n      } else if (this.nzMode === 'tags') {\n        const listOfUnMatchedLabel = listOfLabel.filter(label => this.listOfTagAndTemplateItem.findIndex(item => item.nzLabel === label) === -1);\n        this.updateListOfValue([...this.listOfValue, ...listOfMatchedValue, ...listOfUnMatchedLabel]);\n      }\n      this.clearInput();\n    }\n    onKeyDown(e) {\n      if (this.nzDisabled) {\n        return;\n      }\n      const listOfFilteredOptionNotDisabled = this.listOfContainerItem.filter(item => item.type === 'item').filter(item => !item.nzDisabled);\n      const activatedIndex = listOfFilteredOptionNotDisabled.findIndex(item => this.compareWith(item.nzValue, this.activatedValue));\n      switch (e.keyCode) {\n        case UP_ARROW:\n          e.preventDefault();\n          if (this.nzOpen && listOfFilteredOptionNotDisabled.length > 0) {\n            const preIndex = activatedIndex > 0 ? activatedIndex - 1 : listOfFilteredOptionNotDisabled.length - 1;\n            this.activatedValue = listOfFilteredOptionNotDisabled[preIndex].nzValue;\n          }\n          break;\n        case DOWN_ARROW:\n          e.preventDefault();\n          if (this.nzOpen && listOfFilteredOptionNotDisabled.length > 0) {\n            const nextIndex = activatedIndex < listOfFilteredOptionNotDisabled.length - 1 ? activatedIndex + 1 : 0;\n            this.activatedValue = listOfFilteredOptionNotDisabled[nextIndex].nzValue;\n          } else {\n            this.setOpenState(true);\n          }\n          break;\n        case ENTER:\n          e.preventDefault();\n          if (this.nzOpen) {\n            if (isNotNil(this.activatedValue) && activatedIndex !== -1) {\n              this.onItemClick(this.activatedValue);\n            }\n          } else {\n            this.setOpenState(true);\n          }\n          break;\n        case SPACE:\n          if (!this.nzOpen) {\n            this.setOpenState(true);\n            e.preventDefault();\n          }\n          break;\n        case TAB:\n          if (this.nzSelectOnTab) {\n            if (this.nzOpen) {\n              e.preventDefault();\n              if (isNotNil(this.activatedValue)) {\n                this.onItemClick(this.activatedValue);\n              }\n            }\n          } else {\n            this.setOpenState(false);\n          }\n          break;\n        case ESCAPE:\n          /**\n           * Skip the ESCAPE processing, it will be handled in {@link onOverlayKeyDown}.\n           */\n          break;\n        default:\n          if (!this.nzOpen) {\n            this.setOpenState(true);\n          }\n      }\n    }\n    setOpenState(value) {\n      if (this.nzOpen !== value) {\n        this.nzOpen = value;\n        this.nzOpenChange.emit(value);\n        this.onOpenChange();\n        this.cdr.markForCheck();\n      }\n    }\n    onOpenChange() {\n      this.updateCdkConnectedOverlayStatus();\n      this.clearInput();\n    }\n    onInputValueChange(value) {\n      this.searchValue = value;\n      this.updateListOfContainerItem();\n      this.nzOnSearch.emit(value);\n      this.updateCdkConnectedOverlayPositions();\n    }\n    onClearSelection() {\n      this.updateListOfValue([]);\n    }\n    onClickOutside(event) {\n      if (!this.host.nativeElement.contains(event.target)) {\n        this.setOpenState(false);\n      }\n    }\n    focus() {\n      this.nzSelectTopControlComponent.focus();\n    }\n    blur() {\n      this.nzSelectTopControlComponent.blur();\n    }\n    onPositionChange(position) {\n      const placement = getPlacementName(position);\n      this.dropDownPosition = placement;\n    }\n    updateCdkConnectedOverlayStatus() {\n      if (this.platform.isBrowser && this.originElement.nativeElement) {\n        const triggerWidth = this.triggerWidth;\n        cancelRequestAnimationFrame(this.requestId);\n        this.requestId = reqAnimFrame(() => {\n          // Blink triggers style and layout pipelines anytime the `getBoundingClientRect()` is called, which may cause a\n          // frame drop. That's why it's scheduled through the `requestAnimationFrame` to unload the composite thread.\n          this.triggerWidth = this.originElement.nativeElement.getBoundingClientRect().width;\n          if (triggerWidth !== this.triggerWidth) {\n            // The `requestAnimationFrame` will trigger change detection, but we're inside an `OnPush` component which won't have\n            // the `ChecksEnabled` state. Calling `markForCheck()` will allow Angular to run the change detection from the root component\n            // down to the `nz-select`. But we'll trigger only local change detection if the `triggerWidth` has been changed.\n            this.cdr.detectChanges();\n          }\n        });\n      }\n    }\n    updateCdkConnectedOverlayPositions() {\n      reqAnimFrame(() => {\n        this.cdkConnectedOverlay?.overlayRef?.updatePosition();\n      });\n    }\n    constructor(ngZone, destroy$, nzConfigService, cdr, host, renderer, platform, focusMonitor, directionality, noAnimation, nzFormStatusService, nzFormNoStatusService) {\n      this.ngZone = ngZone;\n      this.destroy$ = destroy$;\n      this.nzConfigService = nzConfigService;\n      this.cdr = cdr;\n      this.host = host;\n      this.renderer = renderer;\n      this.platform = platform;\n      this.focusMonitor = focusMonitor;\n      this.directionality = directionality;\n      this.noAnimation = noAnimation;\n      this.nzFormStatusService = nzFormStatusService;\n      this.nzFormNoStatusService = nzFormNoStatusService;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzId = null;\n      this.nzSize = 'default';\n      this.nzStatus = '';\n      this.nzOptionHeightPx = 32;\n      this.nzOptionOverflowSize = 8;\n      this.nzDropdownClassName = null;\n      this.nzDropdownMatchSelectWidth = true;\n      this.nzDropdownStyle = null;\n      this.nzNotFoundContent = undefined;\n      this.nzPlaceHolder = null;\n      this.nzPlacement = null;\n      this.nzMaxTagCount = Infinity;\n      this.nzDropdownRender = null;\n      this.nzCustomTemplate = null;\n      this.nzSuffixIcon = null;\n      this.nzClearIcon = null;\n      this.nzRemoveIcon = null;\n      this.nzMenuItemSelectedIcon = null;\n      this.nzTokenSeparators = [];\n      this.nzMaxTagPlaceholder = null;\n      this.nzMaxMultipleCount = Infinity;\n      this.nzMode = 'default';\n      this.nzFilterOption = defaultFilterOption;\n      this.compareWith = (o1, o2) => o1 === o2;\n      this.nzAllowClear = false;\n      this.nzBorderless = false;\n      this.nzShowSearch = false;\n      this.nzLoading = false;\n      this.nzAutoFocus = false;\n      this.nzAutoClearSearchValue = true;\n      this.nzServerSearch = false;\n      this.nzDisabled = false;\n      this.nzOpen = false;\n      this.nzSelectOnTab = false;\n      this.nzBackdrop = false;\n      this.nzOptions = [];\n      this.nzOnSearch = new EventEmitter();\n      this.nzScrollToBottom = new EventEmitter();\n      this.nzOpenChange = new EventEmitter();\n      this.nzBlur = new EventEmitter();\n      this.nzFocus = new EventEmitter();\n      this.listOfValue$ = new BehaviorSubject([]);\n      this.listOfTemplateItem$ = new BehaviorSubject([]);\n      this.listOfTagAndTemplateItem = [];\n      this.searchValue = '';\n      this.isReactiveDriven = false;\n      this.requestId = -1;\n      this.isNzDisableFirstChange = true;\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.dropDownPosition = 'bottomLeft';\n      this.triggerWidth = null;\n      this.listOfContainerItem = [];\n      this.listOfTopItem = [];\n      this.activatedValue = null;\n      this.listOfValue = [];\n      this.focused = false;\n      this.dir = 'ltr';\n      this.positions = [];\n      // status\n      this.prefixCls = 'ant-select';\n      this.statusCls = {};\n      this.status = '';\n      this.hasFeedback = false;\n    }\n    writeValue(modelValue) {\n      /** https://github.com/angular/angular/issues/14988 **/\n      if (this.value !== modelValue) {\n        this.value = modelValue;\n        const covertModelToList = (model, mode) => {\n          if (model === null || model === undefined) {\n            return [];\n          } else if (mode === 'default') {\n            return [model];\n          } else {\n            return model;\n          }\n        };\n        const listOfValue = covertModelToList(modelValue, this.nzMode);\n        this.listOfValue = listOfValue;\n        this.listOfValue$.next(listOfValue);\n        this.cdr.markForCheck();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n      this.nzDisabled = this.isNzDisableFirstChange && this.nzDisabled || disabled;\n      this.isNzDisableFirstChange = false;\n      if (this.nzDisabled) {\n        this.setOpenState(false);\n      }\n      this.cdr.markForCheck();\n    }\n    ngOnChanges(changes) {\n      const {\n        nzOpen,\n        nzDisabled,\n        nzOptions,\n        nzStatus,\n        nzPlacement\n      } = changes;\n      if (nzOpen) {\n        this.onOpenChange();\n      }\n      if (nzDisabled && this.nzDisabled) {\n        this.setOpenState(false);\n      }\n      if (nzOptions) {\n        this.isReactiveDriven = true;\n        const listOfOptions = this.nzOptions || [];\n        const listOfTransformedItem = listOfOptions.map(item => {\n          return {\n            template: item.label instanceof TemplateRef ? item.label : null,\n            nzTitle: this.getTitle(item.title, item.label),\n            nzLabel: typeof item.label === 'string' || typeof item.label === 'number' ? item.label : null,\n            nzValue: item.value,\n            nzDisabled: item.disabled || false,\n            nzHide: item.hide || false,\n            nzCustomContent: item.label instanceof TemplateRef,\n            groupLabel: item.groupLabel || null,\n            type: 'item',\n            key: item.key === undefined ? item.value : item.key\n          };\n        });\n        this.listOfTemplateItem$.next(listOfTransformedItem);\n      }\n      if (nzStatus) {\n        this.setStatusStyles(this.nzStatus, this.hasFeedback);\n      }\n      if (nzPlacement) {\n        const {\n          currentValue\n        } = nzPlacement;\n        this.dropDownPosition = currentValue;\n        const listOfPlacement = ['bottomLeft', 'topLeft', 'bottomRight', 'topRight'];\n        if (currentValue && listOfPlacement.includes(currentValue)) {\n          this.positions = [POSITION_MAP[currentValue]];\n        } else {\n          this.positions = listOfPlacement.map(e => POSITION_MAP[e]);\n        }\n      }\n    }\n    ngOnInit() {\n      this.nzFormStatusService?.formStatusChanges.pipe(distinctUntilChanged((pre, cur) => {\n        return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n      }), withLatestFrom(this.nzFormNoStatusService ? this.nzFormNoStatusService.noFormStatus : of(false)), map(([{\n        status,\n        hasFeedback\n      }, noStatus]) => ({\n        status: noStatus ? '' : status,\n        hasFeedback\n      })), takeUntil(this.destroy$)).subscribe(({\n        status,\n        hasFeedback\n      }) => {\n        this.setStatusStyles(status, hasFeedback);\n      });\n      this.focusMonitor.monitor(this.host, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          this.focused = false;\n          this.cdr.markForCheck();\n          this.nzBlur.emit();\n          Promise.resolve().then(() => {\n            this.onTouched();\n          });\n        } else {\n          this.focused = true;\n          this.cdr.markForCheck();\n          this.nzFocus.emit();\n        }\n      });\n      combineLatest([this.listOfValue$, this.listOfTemplateItem$]).pipe(takeUntil(this.destroy$)).subscribe(([listOfSelectedValue, listOfTemplateItem]) => {\n        const listOfTagItem = listOfSelectedValue.filter(() => this.nzMode === 'tags').filter(value => listOfTemplateItem.findIndex(o => this.compareWith(o.nzValue, value)) === -1).map(value => this.listOfTopItem.find(o => this.compareWith(o.nzValue, value)) || this.generateTagItem(value));\n        this.listOfTagAndTemplateItem = [...listOfTemplateItem, ...listOfTagItem];\n        this.listOfTopItem = this.listOfValue.map(v => [...this.listOfTagAndTemplateItem, ...this.listOfTopItem].find(item => this.compareWith(v, item.nzValue))).filter(item => !!item);\n        this.updateListOfContainerItem();\n      });\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.nzConfigService.getConfigChangeEventForComponent('select').pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.cdr.markForCheck();\n      });\n      this.dir = this.directionality.value;\n      this.ngZone.runOutsideAngular(() => fromEvent(this.host.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(() => {\n        if (this.nzOpen && this.nzShowSearch || this.nzDisabled) {\n          return;\n        }\n        this.ngZone.run(() => this.setOpenState(!this.nzOpen));\n      }));\n      // Caretaker note: we could've added this listener within the template `(overlayKeydown)=\"...\"`,\n      // but with this approach, it'll run change detection on each keyboard click, and also it'll run\n      // `markForCheck()` internally, which means the whole component tree (starting from the root and\n      // going down to the select component) will be re-checked and updated (if needed).\n      // This is safe to do that manually since `setOpenState()` calls `markForCheck()` if needed.\n      this.cdkConnectedOverlay.overlayKeydown.pipe(takeUntil(this.destroy$)).subscribe(event => {\n        if (event.keyCode === ESCAPE) {\n          this.setOpenState(false);\n        }\n      });\n    }\n    ngAfterContentInit() {\n      if (!this.isReactiveDriven) {\n        merge(this.listOfNzOptionGroupComponent.changes, this.listOfNzOptionComponent.changes).pipe(startWith(true), switchMap(() => merge(...[this.listOfNzOptionComponent.changes, this.listOfNzOptionGroupComponent.changes, ...this.listOfNzOptionComponent.map(option => option.changes), ...this.listOfNzOptionGroupComponent.map(option => option.changes)]).pipe(startWith(true))), takeUntil(this.destroy$)).subscribe(() => {\n          const listOfOptionInterface = this.listOfNzOptionComponent.toArray().map(item => {\n            const {\n              template,\n              nzLabel,\n              nzValue,\n              nzKey,\n              nzDisabled,\n              nzHide,\n              nzCustomContent,\n              groupLabel\n            } = item;\n            return {\n              template,\n              nzLabel,\n              nzValue,\n              nzDisabled,\n              nzHide,\n              nzCustomContent,\n              groupLabel,\n              nzTitle: this.getTitle(item.nzTitle, item.nzLabel),\n              type: 'item',\n              key: nzKey === undefined ? nzValue : nzKey\n            };\n          });\n          this.listOfTemplateItem$.next(listOfOptionInterface);\n          this.cdr.markForCheck();\n        });\n      }\n    }\n    ngOnDestroy() {\n      cancelRequestAnimationFrame(this.requestId);\n      this.focusMonitor.stopMonitoring(this.host);\n    }\n    setStatusStyles(status, hasFeedback) {\n      this.status = status;\n      this.hasFeedback = hasFeedback;\n      this.cdr.markForCheck();\n      // render status if nzStatus is set\n      this.statusCls = getStatusClassNames(this.prefixCls, status, hasFeedback);\n      Object.keys(this.statusCls).forEach(status => {\n        if (this.statusCls[status]) {\n          this.renderer.addClass(this.host.nativeElement, status);\n        } else {\n          this.renderer.removeClass(this.host.nativeElement, status);\n        }\n      });\n    }\n    getTitle(title, label) {\n      let rawTitle = undefined;\n      if (title === undefined) {\n        if (typeof label === 'string' || typeof label === 'number') {\n          rawTitle = label.toString();\n        }\n      } else if (typeof title === 'string' || typeof title === 'number') {\n        rawTitle = title.toString();\n      }\n      return rawTitle;\n    }\n    static #_ = this.ɵfac = function NzSelectComponent_Factory(t) {\n      return new (t || NzSelectComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.NzDestroyService), i0.ɵɵdirectiveInject(i2$3.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i3$2.Platform), i0.ɵɵdirectiveInject(i1$2.FocusMonitor), i0.ɵɵdirectiveInject(i5.Directionality, 8), i0.ɵɵdirectiveInject(i6.NzNoAnimationDirective, 9), i0.ɵɵdirectiveInject(i7.NzFormStatusService, 8), i0.ɵɵdirectiveInject(i7.NzFormNoStatusService, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSelectComponent,\n      selectors: [[\"nz-select\"]],\n      contentQueries: function NzSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzOptionComponent, 5);\n          i0.ɵɵcontentQuery(dirIndex, NzOptionGroupComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzOptionComponent = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzOptionGroupComponent = _t);\n        }\n      },\n      viewQuery: function NzSelectComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);\n          i0.ɵɵviewQuery(CdkConnectedOverlay, 7);\n          i0.ɵɵviewQuery(NzSelectTopControlComponent, 7);\n          i0.ɵɵviewQuery(NzOptionGroupComponent, 7, ElementRef);\n          i0.ɵɵviewQuery(NzSelectTopControlComponent, 7, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.originElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzSelectTopControlComponent = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzOptionGroupComponentElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzSelectTopControlComponentElement = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ant-select\"],\n      hostVars: 26,\n      hostBindings: function NzSelectComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-select-in-form-item\", !!ctx.nzFormStatusService)(\"ant-select-lg\", ctx.nzSize === \"large\")(\"ant-select-sm\", ctx.nzSize === \"small\")(\"ant-select-show-arrow\", ctx.nzShowArrow)(\"ant-select-disabled\", ctx.nzDisabled)(\"ant-select-show-search\", (ctx.nzShowSearch || ctx.nzMode !== \"default\") && !ctx.nzDisabled)(\"ant-select-allow-clear\", ctx.nzAllowClear)(\"ant-select-borderless\", ctx.nzBorderless)(\"ant-select-open\", ctx.nzOpen)(\"ant-select-focused\", ctx.nzOpen || ctx.focused)(\"ant-select-single\", ctx.nzMode === \"default\")(\"ant-select-multiple\", ctx.nzMode !== \"default\")(\"ant-select-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        nzId: \"nzId\",\n        nzSize: \"nzSize\",\n        nzStatus: \"nzStatus\",\n        nzOptionHeightPx: \"nzOptionHeightPx\",\n        nzOptionOverflowSize: \"nzOptionOverflowSize\",\n        nzDropdownClassName: \"nzDropdownClassName\",\n        nzDropdownMatchSelectWidth: \"nzDropdownMatchSelectWidth\",\n        nzDropdownStyle: \"nzDropdownStyle\",\n        nzNotFoundContent: \"nzNotFoundContent\",\n        nzPlaceHolder: \"nzPlaceHolder\",\n        nzPlacement: \"nzPlacement\",\n        nzMaxTagCount: \"nzMaxTagCount\",\n        nzDropdownRender: \"nzDropdownRender\",\n        nzCustomTemplate: \"nzCustomTemplate\",\n        nzSuffixIcon: \"nzSuffixIcon\",\n        nzClearIcon: \"nzClearIcon\",\n        nzRemoveIcon: \"nzRemoveIcon\",\n        nzMenuItemSelectedIcon: \"nzMenuItemSelectedIcon\",\n        nzTokenSeparators: \"nzTokenSeparators\",\n        nzMaxTagPlaceholder: \"nzMaxTagPlaceholder\",\n        nzMaxMultipleCount: \"nzMaxMultipleCount\",\n        nzMode: \"nzMode\",\n        nzFilterOption: \"nzFilterOption\",\n        compareWith: \"compareWith\",\n        nzAllowClear: \"nzAllowClear\",\n        nzBorderless: \"nzBorderless\",\n        nzShowSearch: \"nzShowSearch\",\n        nzLoading: \"nzLoading\",\n        nzAutoFocus: \"nzAutoFocus\",\n        nzAutoClearSearchValue: \"nzAutoClearSearchValue\",\n        nzServerSearch: \"nzServerSearch\",\n        nzDisabled: \"nzDisabled\",\n        nzOpen: \"nzOpen\",\n        nzSelectOnTab: \"nzSelectOnTab\",\n        nzBackdrop: \"nzBackdrop\",\n        nzOptions: \"nzOptions\",\n        nzShowArrow: \"nzShowArrow\"\n      },\n      outputs: {\n        nzOnSearch: \"nzOnSearch\",\n        nzScrollToBottom: \"nzScrollToBottom\",\n        nzOpenChange: \"nzOpenChange\",\n        nzBlur: \"nzBlur\",\n        nzFocus: \"nzFocus\"\n      },\n      exportAs: [\"nzSelect\"],\n      features: [i0.ɵɵProvidersFeature([NzDestroyService, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzSelectComponent),\n        multi: true\n      }]), i0.ɵɵNgOnChangesFeature],\n      decls: 5,\n      vars: 25,\n      consts: [[\"cdkOverlayOrigin\", \"\", 3, \"nzId\", \"open\", \"disabled\", \"mode\", \"nzNoAnimation\", \"maxTagPlaceholder\", \"removeIcon\", \"placeHolder\", \"maxTagCount\", \"customTemplate\", \"tokenSeparators\", \"showSearch\", \"autofocus\", \"listOfTopItem\", \"inputValueChange\", \"tokenize\", \"deleteItem\", \"keydown\"], [\"origin\", \"cdkOverlayOrigin\"], [3, \"showArrow\", \"loading\", \"search\", \"suffixIcon\", \"feedbackIcon\", 4, \"ngIf\"], [3, \"clearIcon\", \"clear\", 4, \"ngIf\"], [\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"overlayOutsideClick\", \"detach\", \"positionChange\"], [3, \"showArrow\", \"loading\", \"search\", \"suffixIcon\", \"feedbackIcon\"], [\"feedbackIconTpl\", \"\"], [3, \"status\", 4, \"ngIf\"], [3, \"status\"], [3, \"clearIcon\", \"clear\"], [3, \"ngStyle\", \"itemSize\", \"maxItemLength\", \"matchWidth\", \"nzNoAnimation\", \"listOfContainerItem\", \"menuItemSelectedIcon\", \"notFoundContent\", \"activatedValue\", \"listOfSelectedValue\", \"dropdownRender\", \"compareWith\", \"mode\", \"keydown\", \"itemClick\", \"scrollToBottom\"]],\n      template: function NzSelectComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nz-select-top-control\", 0, 1);\n          i0.ɵɵlistener(\"inputValueChange\", function NzSelectComponent_Template_nz_select_top_control_inputValueChange_0_listener($event) {\n            return ctx.onInputValueChange($event);\n          })(\"tokenize\", function NzSelectComponent_Template_nz_select_top_control_tokenize_0_listener($event) {\n            return ctx.onTokenSeparate($event);\n          })(\"deleteItem\", function NzSelectComponent_Template_nz_select_top_control_deleteItem_0_listener($event) {\n            return ctx.onItemDelete($event);\n          })(\"keydown\", function NzSelectComponent_Template_nz_select_top_control_keydown_0_listener($event) {\n            return ctx.onKeyDown($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, NzSelectComponent_nz_select_arrow_2_Template, 3, 5, \"nz-select-arrow\", 2);\n          i0.ɵɵtemplate(3, NzSelectComponent_nz_select_clear_3_Template, 1, 1, \"nz-select-clear\", 3);\n          i0.ɵɵtemplate(4, NzSelectComponent_ng_template_4_Template, 1, 23, \"ng-template\", 4);\n          i0.ɵɵlistener(\"overlayOutsideClick\", function NzSelectComponent_Template_ng_template_overlayOutsideClick_4_listener($event) {\n            return ctx.onClickOutside($event);\n          })(\"detach\", function NzSelectComponent_Template_ng_template_detach_4_listener() {\n            return ctx.setOpenState(false);\n          })(\"positionChange\", function NzSelectComponent_Template_ng_template_positionChange_4_listener($event) {\n            return ctx.onPositionChange($event);\n          });\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(1);\n          i0.ɵɵproperty(\"nzId\", ctx.nzId)(\"open\", ctx.nzOpen)(\"disabled\", ctx.nzDisabled)(\"mode\", ctx.nzMode)(\"@.disabled\", !!(ctx.noAnimation == null ? null : ctx.noAnimation.nzNoAnimation))(\"nzNoAnimation\", ctx.noAnimation == null ? null : ctx.noAnimation.nzNoAnimation)(\"maxTagPlaceholder\", ctx.nzMaxTagPlaceholder)(\"removeIcon\", ctx.nzRemoveIcon)(\"placeHolder\", ctx.nzPlaceHolder)(\"maxTagCount\", ctx.nzMaxTagCount)(\"customTemplate\", ctx.nzCustomTemplate)(\"tokenSeparators\", ctx.nzTokenSeparators)(\"showSearch\", ctx.nzShowSearch)(\"autofocus\", ctx.nzAutoFocus)(\"listOfTopItem\", ctx.listOfTopItem);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzShowArrow || ctx.hasFeedback && !!ctx.status);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzAllowClear && !ctx.nzDisabled && ctx.listOfValue.length);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"cdkConnectedOverlayHasBackdrop\", ctx.nzBackdrop)(\"cdkConnectedOverlayMinWidth\", ctx.nzDropdownMatchSelectWidth ? null : ctx.triggerWidth)(\"cdkConnectedOverlayWidth\", ctx.nzDropdownMatchSelectWidth ? ctx.triggerWidth : null)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-select-dropdown\")(\"cdkConnectedOverlayPanelClass\", ctx.nzDropdownClassName)(\"cdkConnectedOverlayOpen\", ctx.nzOpen)(\"cdkConnectedOverlayPositions\", ctx.positions);\n        }\n      },\n      dependencies: [i2.NgIf, i2.NgStyle, i9.CdkConnectedOverlay, i9.CdkOverlayOrigin, i10.NzConnectedOverlayDirective, i6.NzNoAnimationDirective, i4.ɵNzTransitionPatchDirective, i7.NzFormItemFeedbackIconComponent, NzOptionContainerComponent, NzSelectTopControlComponent, NzSelectClearComponent, NzSelectArrowComponent],\n      encapsulation: 2,\n      data: {\n        animation: [slideMotion]\n      },\n      changeDetection: 0\n    });\n  }\n  __decorate([WithConfig()], NzSelectComponent.prototype, \"nzSuffixIcon\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzAllowClear\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzSelectComponent.prototype, \"nzBorderless\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzShowSearch\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzLoading\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzAutoFocus\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzAutoClearSearchValue\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzServerSearch\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzDisabled\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzOpen\", void 0);\n  __decorate([InputBoolean()], NzSelectComponent.prototype, \"nzSelectOnTab\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzSelectComponent.prototype, \"nzBackdrop\", void 0);\n  return NzSelectComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSelectModule = /*#__PURE__*/(() => {\n  class NzSelectModule {\n    static #_ = this.ɵfac = function NzSelectModule_Factory(t) {\n      return new (t || NzSelectModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzSelectModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BidiModule, CommonModule, NzI18nModule, FormsModule, PlatformModule, OverlayModule, NzIconModule, NzOutletModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule, ɵNzTransitionPatchModule, NzFormPatchModule, ScrollingModule, A11yModule]\n    });\n  }\n  return NzSelectModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzOptionComponent, NzOptionContainerComponent, NzOptionGroupComponent, NzOptionItemComponent, NzOptionItemGroupComponent, NzSelectArrowComponent, NzSelectClearComponent, NzSelectComponent, NzSelectItemComponent, NzSelectModule, NzSelectPlaceholderComponent, NzSelectSearchComponent, NzSelectTopControlComponent };\n//# sourceMappingURL=ng-zorro-antd-select.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}