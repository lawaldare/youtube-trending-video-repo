{"ast":null,"code":"import _asyncToGenerator from \"/Users/darelawal/Desktop/youtube-trending-video-repo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i2 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Component, ChangeDetectionStrategy, Optional, Inject, ViewChild, Output, Input, Injector, TemplateRef, Injectable, SkipSelf, ContentChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, defer } from 'rxjs';\nimport { takeUntil, filter, take, startWith } from 'rxjs/operators';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { getElementOffset, isNotNil, isPromise, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i3 from 'ng-zorro-antd/core/config';\nimport * as i1$1 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i2$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i9 from 'ng-zorro-antd/button';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport * as i3$1 from 'ng-zorro-antd/core/transition-patch';\nimport * as i11 from 'ng-zorro-antd/core/wave';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i14 from 'ng-zorro-antd/pipes';\nimport { NzPipesModule } from 'ng-zorro-antd/pipes';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3$2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { __decorate } from 'tslib';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"nz-modal-close\", \"\"];\nfunction NzModalCloseComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const closeIcon_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", closeIcon_r1);\n  }\n}\nconst _c1 = [\"modalElement\"];\nfunction NzModalConfirmContainerComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onCloseClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NzModalConfirmContainerComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.config.nzTitle, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzModalConfirmContainerComponent_ng_template_12_Template(rf, ctx) {}\nfunction NzModalConfirmContainerComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzContent, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzModalConfirmContainerComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onCancel());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzLoading\", !!ctx_r5.config.nzCancelLoading)(\"disabled\", ctx_r5.config.nzCancelDisabled);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r5.config.nzAutofocus === \"cancel\" || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.config.nzCancelText || ctx_r5.locale.cancelText, \" \");\n  }\n}\nfunction NzModalConfirmContainerComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onOk());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r6.config.nzOkType)(\"nzLoading\", !!ctx_r6.config.nzOkLoading)(\"disabled\", ctx_r6.config.nzOkDisabled)(\"nzDanger\", ctx_r6.config.nzOkDanger);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r6.config.nzAutofocus === \"ok\" || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.config.nzOkText || ctx_r6.locale.okText, \" \");\n  }\n}\nconst _c2 = [\"nz-modal-footer\", \"\"];\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzFooter, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const button_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r8.onButtonClick(button_r7));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"hidden\", !ctx_r6.getButtonCallableProp(button_r7, \"show\"))(\"nzLoading\", ctx_r6.getButtonCallableProp(button_r7, \"loading\"))(\"disabled\", ctx_r6.getButtonCallableProp(button_r7, \"disabled\"))(\"nzType\", button_r7.type)(\"nzDanger\", button_r7.danger)(\"nzShape\", button_r7.shape)(\"nzSize\", button_r7.size)(\"nzGhost\", button_r7.ghost);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", button_r7.label, \" \");\n  }\n}\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template, 2, 9, \"button\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.buttons);\n  }\n}\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_div_1_Template, 1, 1, \"div\", 3);\n    i0.ɵɵtemplate(2, NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.buttonsFooter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.buttonsFooter);\n  }\n}\nconst _c3 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    modalRef: a1\n  };\n};\nfunction NzModalFooterComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.config.nzFooter)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c3, ctx_r0.config.nzData, ctx_r0.modalRef));\n  }\n}\nfunction NzModalFooterComponent_ng_template_1_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_template_1_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onCancel());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzLoading\", !!ctx_r10.config.nzCancelLoading)(\"disabled\", ctx_r10.config.nzCancelDisabled);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r10.config.nzAutofocus === \"cancel\" || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.config.nzCancelText || ctx_r10.locale.cancelText, \" \");\n  }\n}\nfunction NzModalFooterComponent_ng_template_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_template_1_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onOk());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzType\", ctx_r11.config.nzOkType)(\"nzDanger\", ctx_r11.config.nzOkDanger)(\"nzLoading\", !!ctx_r11.config.nzOkLoading)(\"disabled\", ctx_r11.config.nzOkDisabled);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r11.config.nzAutofocus === \"ok\" || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.config.nzOkText || ctx_r11.locale.okText, \" \");\n  }\n}\nfunction NzModalFooterComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzModalFooterComponent_ng_template_1_button_0_Template, 2, 4, \"button\", 8);\n    i0.ɵɵtemplate(1, NzModalFooterComponent_ng_template_1_button_1_Template, 2, 6, \"button\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.nzCancelText !== null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.nzOkText !== null);\n  }\n}\nconst _c4 = [\"nz-modal-title\", \"\"];\nfunction NzModalTitleComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.config.nzTitle, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzModalContainerComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function NzModalContainerComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onCloseClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NzModalContainerComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n}\nfunction NzModalContainerComponent_ng_template_7_Template(rf, ctx) {}\nfunction NzModalContainerComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzContent, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzModalContainerComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"cancelTriggered\", function NzModalContainerComponent_div_9_Template_div_cancelTriggered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onCloseClick());\n    })(\"okTriggered\", function NzModalContainerComponent_div_9_Template_div_okTriggered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onOkClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"modalRef\", ctx_r5.modalRef);\n  }\n}\nconst noopFun = () => void 0;\nclass ModalOptions {\n  constructor() {\n    this.nzCentered = false;\n    this.nzClosable = true;\n    this.nzOkLoading = false;\n    this.nzOkDisabled = false;\n    this.nzCancelDisabled = false;\n    this.nzCancelLoading = false;\n    this.nzNoAnimation = false;\n    this.nzAutofocus = 'auto';\n    this.nzKeyboard = true;\n    this.nzZIndex = 1000;\n    this.nzWidth = 520;\n    this.nzCloseIcon = 'close';\n    this.nzOkType = 'primary';\n    this.nzOkDanger = false;\n    this.nzModalType = 'default';\n    this.nzOnCancel = noopFun;\n    this.nzOnOk = noopFun;\n    // Confirm\n    this.nzIconType = 'question-circle';\n  }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst ZOOM_CLASS_NAME_MAP = {\n  enter: 'ant-zoom-enter',\n  enterActive: 'ant-zoom-enter-active',\n  leave: 'ant-zoom-leave',\n  leaveActive: 'ant-zoom-leave-active'\n};\nconst FADE_CLASS_NAME_MAP = {\n  enter: 'ant-fade-enter',\n  enterActive: 'ant-fade-enter-active',\n  leave: 'ant-fade-leave',\n  leaveActive: 'ant-fade-leave-active'\n};\nconst MODAL_MASK_CLASS_NAME = 'ant-modal-mask';\nconst NZ_CONFIG_MODULE_NAME = 'modal';\nconst NZ_MODAL_DATA = new InjectionToken('NZ_MODAL_DATA');\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst nzModalAnimations = {\n  modalContainer: trigger('modalContainer', [state('void, exit', style({})), state('enter', style({})), transition('* => enter', animate('.24s', style({}))), transition('* => void, * => exit', animate('.2s', style({})))])\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction applyConfigDefaults(config, defaultOptions) {\n  return {\n    ...defaultOptions,\n    ...config\n  };\n}\nfunction getValueWithConfig(userValue, configValue, defaultValue) {\n  return typeof userValue === 'undefined' ? typeof configValue === 'undefined' ? defaultValue : configValue : userValue;\n}\nfunction getConfigFromComponent(component) {\n  const {\n    nzCentered,\n    nzMask,\n    nzMaskClosable,\n    nzClosable,\n    nzOkLoading,\n    nzOkDisabled,\n    nzCancelDisabled,\n    nzCancelLoading,\n    nzKeyboard,\n    nzNoAnimation,\n    nzContent,\n    nzFooter,\n    nzZIndex,\n    nzWidth,\n    nzWrapClassName,\n    nzClassName,\n    nzStyle,\n    nzTitle,\n    nzCloseIcon,\n    nzMaskStyle,\n    nzBodyStyle,\n    nzOkText,\n    nzCancelText,\n    nzOkType,\n    nzOkDanger,\n    nzIconType,\n    nzModalType,\n    nzOnOk,\n    nzOnCancel,\n    nzAfterOpen,\n    nzAfterClose,\n    nzCloseOnNavigation,\n    nzAutofocus\n  } = component;\n  return {\n    nzCentered,\n    nzMask,\n    nzMaskClosable,\n    nzClosable,\n    nzOkLoading,\n    nzOkDisabled,\n    nzCancelDisabled,\n    nzCancelLoading,\n    nzKeyboard,\n    nzNoAnimation,\n    nzContent,\n    nzFooter,\n    nzZIndex,\n    nzWidth,\n    nzWrapClassName,\n    nzClassName,\n    nzStyle,\n    nzTitle,\n    nzCloseIcon,\n    nzMaskStyle,\n    nzBodyStyle,\n    nzOkText,\n    nzCancelText,\n    nzOkType,\n    nzOkDanger,\n    nzIconType,\n    nzModalType,\n    nzOnOk,\n    nzOnCancel,\n    nzAfterOpen,\n    nzAfterClose,\n    nzCloseOnNavigation,\n    nzAutofocus\n  };\n}\nfunction throwNzModalContentAlreadyAttachedError() {\n  throw Error('Attempting to attach modal content after content is already attached');\n}\nlet BaseModalContainerComponent = /*#__PURE__*/(() => {\n  class BaseModalContainerComponent extends BasePortalOutlet {\n    get showMask() {\n      const defaultConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n      return !!getValueWithConfig(this.config.nzMask, defaultConfig.nzMask, true);\n    }\n    get maskClosable() {\n      const defaultConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n      return !!getValueWithConfig(this.config.nzMaskClosable, defaultConfig.nzMaskClosable, true);\n    }\n    constructor(ngZone, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n      super();\n      this.ngZone = ngZone;\n      this.host = host;\n      this.focusTrapFactory = focusTrapFactory;\n      this.cdr = cdr;\n      this.render = render;\n      this.overlayRef = overlayRef;\n      this.nzConfigService = nzConfigService;\n      this.config = config;\n      this.animationType = animationType;\n      this.animationStateChanged = new EventEmitter();\n      this.containerClick = new EventEmitter();\n      this.cancelTriggered = new EventEmitter();\n      this.okTriggered = new EventEmitter();\n      this.state = 'enter';\n      this.isStringContent = false;\n      this.dir = 'ltr';\n      this.elementFocusedBeforeModalWasOpened = null;\n      this.mouseDown = false;\n      this.oldMaskStyle = null;\n      this.destroy$ = new Subject();\n      this.document = document;\n      this.dir = overlayRef.getDirection();\n      this.isStringContent = typeof config.nzContent === 'string';\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.updateMaskClassname();\n      });\n    }\n    onContainerClick(e) {\n      if (e.target === e.currentTarget && !this.mouseDown && this.showMask && this.maskClosable) {\n        this.containerClick.emit();\n      }\n    }\n    onCloseClick() {\n      this.cancelTriggered.emit();\n    }\n    onOkClick() {\n      this.okTriggered.emit();\n    }\n    attachComponentPortal(portal) {\n      if (this.portalOutlet.hasAttached()) {\n        throwNzModalContentAlreadyAttachedError();\n      }\n      this.savePreviouslyFocusedElement();\n      this.setZIndexForBackdrop();\n      return this.portalOutlet.attachComponentPortal(portal);\n    }\n    attachTemplatePortal(portal) {\n      if (this.portalOutlet.hasAttached()) {\n        throwNzModalContentAlreadyAttachedError();\n      }\n      this.savePreviouslyFocusedElement();\n      this.setZIndexForBackdrop();\n      return this.portalOutlet.attachTemplatePortal(portal);\n    }\n    attachStringContent() {\n      this.savePreviouslyFocusedElement();\n      this.setZIndexForBackdrop();\n    }\n    getNativeElement() {\n      return this.host.nativeElement;\n    }\n    animationDisabled() {\n      return this.config.nzNoAnimation || this.animationType === 'NoopAnimations';\n    }\n    setModalTransformOrigin() {\n      const modalElement = this.modalElementRef.nativeElement;\n      if (this.elementFocusedBeforeModalWasOpened) {\n        const previouslyDOMRect = this.elementFocusedBeforeModalWasOpened.getBoundingClientRect();\n        const lastPosition = getElementOffset(this.elementFocusedBeforeModalWasOpened);\n        const x = lastPosition.left + previouslyDOMRect.width / 2;\n        const y = lastPosition.top + previouslyDOMRect.height / 2;\n        const transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\n        this.render.setStyle(modalElement, 'transform-origin', transformOrigin);\n      }\n    }\n    savePreviouslyFocusedElement() {\n      if (!this.focusTrap) {\n        this.focusTrap = this.focusTrapFactory.create(this.host.nativeElement);\n      }\n      if (this.document) {\n        this.elementFocusedBeforeModalWasOpened = this.document.activeElement;\n        if (this.host.nativeElement.focus) {\n          this.ngZone.runOutsideAngular(() => reqAnimFrame(() => this.host.nativeElement.focus()));\n        }\n      }\n    }\n    trapFocus() {\n      const element = this.host.nativeElement;\n      if (this.config.nzAutofocus) {\n        this.focusTrap.focusInitialElementWhenReady();\n      } else {\n        const activeElement = this.document.activeElement;\n        if (activeElement !== element && !element.contains(activeElement)) {\n          element.focus();\n        }\n      }\n    }\n    restoreFocus() {\n      const toFocus = this.elementFocusedBeforeModalWasOpened;\n      // We need the extra check, because IE can set the `activeElement` to null in some cases.\n      if (toFocus && typeof toFocus.focus === 'function') {\n        const activeElement = this.document.activeElement;\n        const element = this.host.nativeElement;\n        if (!activeElement || activeElement === this.document.body || activeElement === element || element.contains(activeElement)) {\n          toFocus.focus();\n        }\n      }\n      if (this.focusTrap) {\n        this.focusTrap.destroy();\n      }\n    }\n    setEnterAnimationClass() {\n      if (this.animationDisabled()) {\n        return;\n      }\n      // Make sure to set the `TransformOrigin` style before set the modelElement's class names\n      this.setModalTransformOrigin();\n      const modalElement = this.modalElementRef.nativeElement;\n      const backdropElement = this.overlayRef.backdropElement;\n      modalElement.classList.add(ZOOM_CLASS_NAME_MAP.enter);\n      modalElement.classList.add(ZOOM_CLASS_NAME_MAP.enterActive);\n      if (backdropElement) {\n        backdropElement.classList.add(FADE_CLASS_NAME_MAP.enter);\n        backdropElement.classList.add(FADE_CLASS_NAME_MAP.enterActive);\n      }\n    }\n    setExitAnimationClass() {\n      const modalElement = this.modalElementRef.nativeElement;\n      modalElement.classList.add(ZOOM_CLASS_NAME_MAP.leave);\n      modalElement.classList.add(ZOOM_CLASS_NAME_MAP.leaveActive);\n      this.setMaskExitAnimationClass();\n    }\n    setMaskExitAnimationClass(force = false) {\n      const backdropElement = this.overlayRef.backdropElement;\n      if (backdropElement) {\n        if (this.animationDisabled() || force) {\n          // https://github.com/angular/components/issues/18645\n          backdropElement.classList.remove(MODAL_MASK_CLASS_NAME);\n          return;\n        }\n        backdropElement.classList.add(FADE_CLASS_NAME_MAP.leave);\n        backdropElement.classList.add(FADE_CLASS_NAME_MAP.leaveActive);\n      }\n    }\n    cleanAnimationClass() {\n      if (this.animationDisabled()) {\n        return;\n      }\n      const backdropElement = this.overlayRef.backdropElement;\n      const modalElement = this.modalElementRef.nativeElement;\n      if (backdropElement) {\n        backdropElement.classList.remove(FADE_CLASS_NAME_MAP.enter);\n        backdropElement.classList.remove(FADE_CLASS_NAME_MAP.enterActive);\n      }\n      modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.enter);\n      modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.enterActive);\n      modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.leave);\n      modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.leaveActive);\n    }\n    setZIndexForBackdrop() {\n      const backdropElement = this.overlayRef.backdropElement;\n      if (backdropElement) {\n        if (isNotNil(this.config.nzZIndex)) {\n          this.render.setStyle(backdropElement, 'z-index', this.config.nzZIndex);\n        }\n      }\n    }\n    bindBackdropStyle() {\n      const backdropElement = this.overlayRef.backdropElement;\n      if (backdropElement) {\n        if (this.oldMaskStyle) {\n          const styles = this.oldMaskStyle;\n          Object.keys(styles).forEach(key => {\n            this.render.removeStyle(backdropElement, key);\n          });\n          this.oldMaskStyle = null;\n        }\n        this.setZIndexForBackdrop();\n        if (typeof this.config.nzMaskStyle === 'object' && Object.keys(this.config.nzMaskStyle).length) {\n          const styles = {\n            ...this.config.nzMaskStyle\n          };\n          Object.keys(styles).forEach(key => {\n            this.render.setStyle(backdropElement, key, styles[key]);\n          });\n          this.oldMaskStyle = styles;\n        }\n      }\n    }\n    updateMaskClassname() {\n      const backdropElement = this.overlayRef.backdropElement;\n      if (backdropElement) {\n        if (this.showMask) {\n          backdropElement.classList.add(MODAL_MASK_CLASS_NAME);\n        } else {\n          backdropElement.classList.remove(MODAL_MASK_CLASS_NAME);\n        }\n      }\n    }\n    onAnimationDone(event) {\n      if (event.toState === 'enter') {\n        this.trapFocus();\n      } else if (event.toState === 'exit') {\n        this.restoreFocus();\n      }\n      this.cleanAnimationClass();\n      this.animationStateChanged.emit(event);\n    }\n    onAnimationStart(event) {\n      if (event.toState === 'enter') {\n        this.setEnterAnimationClass();\n        this.bindBackdropStyle();\n      } else if (event.toState === 'exit') {\n        this.setExitAnimationClass();\n      }\n      this.animationStateChanged.emit(event);\n    }\n    startExitAnimation() {\n      this.state = 'exit';\n      this.cdr.markForCheck();\n    }\n    ngOnDestroy() {\n      this.setMaskExitAnimationClass(true);\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    setupMouseListeners(modalContainer) {\n      this.ngZone.runOutsideAngular(() => {\n        fromEvent(this.host.nativeElement, 'mouseup').pipe(takeUntil(this.destroy$)).subscribe(() => {\n          if (this.mouseDown) {\n            setTimeout(() => {\n              this.mouseDown = false;\n            });\n          }\n        });\n        fromEvent(modalContainer.nativeElement, 'mousedown').pipe(takeUntil(this.destroy$)).subscribe(() => {\n          this.mouseDown = true;\n        });\n      });\n    }\n    static #_ = this.ɵfac = function BaseModalContainerComponent_Factory(t) {\n      i0.ɵɵinvalidFactory();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BaseModalContainerComponent,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return BaseModalContainerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzModalCloseComponent = /*#__PURE__*/(() => {\n  class NzModalCloseComponent {\n    constructor(config) {\n      this.config = config;\n    }\n    static #_ = this.ɵfac = function NzModalCloseComponent_Factory(t) {\n      return new (t || NzModalCloseComponent)(i0.ɵɵdirectiveInject(ModalOptions));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzModalCloseComponent,\n      selectors: [[\"button\", \"nz-modal-close\", \"\"]],\n      hostAttrs: [\"aria-label\", \"Close\", 1, \"ant-modal-close\"],\n      exportAs: [\"NzModalCloseBuiltin\"],\n      attrs: _c0,\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"ant-modal-close-x\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 1, \"ant-modal-close-icon\", 3, \"nzType\"]],\n      template: function NzModalCloseComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"span\", 0);\n          i0.ɵɵtemplate(1, NzModalCloseComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzCloseIcon);\n        }\n      },\n      dependencies: [i2$1.NzStringTemplateOutletDirective, i3$1.ɵNzTransitionPatchDirective, i4.NzIconDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzModalCloseComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzModalConfirmContainerComponent = /*#__PURE__*/(() => {\n  class NzModalConfirmContainerComponent extends BaseModalContainerComponent {\n    constructor(ngZone, i18n, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n      super(ngZone, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType);\n      this.i18n = i18n;\n      this.config = config;\n      this.cancelTriggered = new EventEmitter();\n      this.okTriggered = new EventEmitter();\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.locale = this.i18n.getLocaleData('Modal');\n      });\n    }\n    ngOnInit() {\n      this.setupMouseListeners(this.modalElementRef);\n    }\n    onCancel() {\n      this.cancelTriggered.emit();\n    }\n    onOk() {\n      this.okTriggered.emit();\n    }\n    static #_ = this.ɵfac = function NzModalConfirmContainerComponent_Factory(t) {\n      return new (t || NzModalConfirmContainerComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.NzI18nService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.OverlayRef), i0.ɵɵdirectiveInject(i3.NzConfigService), i0.ɵɵdirectiveInject(ModalOptions), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzModalConfirmContainerComponent,\n      selectors: [[\"nz-modal-confirm-container\"]],\n      viewQuery: function NzModalConfirmContainerComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n          i0.ɵɵviewQuery(_c1, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalElementRef = _t.first);\n        }\n      },\n      hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\"],\n      hostVars: 10,\n      hostBindings: function NzModalConfirmContainerComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵsyntheticHostListener(\"@modalContainer.start\", function NzModalConfirmContainerComponent_animation_modalContainer_start_HostBindingHandler($event) {\n            return ctx.onAnimationStart($event);\n          })(\"@modalContainer.done\", function NzModalConfirmContainerComponent_animation_modalContainer_done_HostBindingHandler($event) {\n            return ctx.onAnimationDone($event);\n          });\n          i0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_click_HostBindingHandler($event) {\n            return ctx.onContainerClick($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.config.nzNoAnimation)(\"@modalContainer\", ctx.state);\n          i0.ɵɵclassMap(ctx.config.nzWrapClassName ? \"ant-modal-wrap \" + ctx.config.nzWrapClassName : \"ant-modal-wrap\");\n          i0.ɵɵstyleProp(\"z-index\", ctx.config.nzZIndex);\n          i0.ɵɵclassProp(\"ant-modal-wrap-rtl\", ctx.dir === \"rtl\")(\"ant-modal-centered\", ctx.config.nzCentered);\n        }\n      },\n      outputs: {\n        cancelTriggered: \"cancelTriggered\",\n        okTriggered: \"okTriggered\"\n      },\n      exportAs: [\"nzModalConfirmContainer\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 17,\n      vars: 13,\n      consts: [[\"role\", \"document\", 1, \"ant-modal\", 3, \"ngClass\", \"ngStyle\"], [\"modalElement\", \"\"], [1, \"ant-modal-content\"], [\"nz-modal-close\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-modal-body\", 3, \"ngStyle\"], [1, \"ant-modal-confirm-body-wrapper\"], [1, \"ant-modal-confirm-body\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-modal-confirm-title\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-modal-confirm-content\"], [\"cdkPortalOutlet\", \"\"], [3, \"innerHTML\", 4, \"ngIf\"], [1, \"ant-modal-confirm-btns\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzLoading\", \"disabled\", \"nzDanger\", \"click\", 4, \"ngIf\"], [\"nz-modal-close\", \"\", 3, \"click\"], [3, \"innerHTML\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzLoading\", \"disabled\", \"nzDanger\", \"click\"]],\n      template: function NzModalConfirmContainerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0, 1);\n          i0.ɵɵpipe(2, \"nzToCssUnit\");\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵtemplate(4, NzModalConfirmContainerComponent_button_4_Template, 1, 0, \"button\", 3);\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6);\n          i0.ɵɵelement(8, \"span\", 7);\n          i0.ɵɵelementStart(9, \"span\", 8);\n          i0.ɵɵtemplate(10, NzModalConfirmContainerComponent_ng_container_10_Template, 2, 1, \"ng-container\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 10);\n          i0.ɵɵtemplate(12, NzModalConfirmContainerComponent_ng_template_12_Template, 0, 0, \"ng-template\", 11);\n          i0.ɵɵtemplate(13, NzModalConfirmContainerComponent_div_13_Template, 1, 1, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 13);\n          i0.ɵɵtemplate(15, NzModalConfirmContainerComponent_button_15_Template, 2, 4, \"button\", 14);\n          i0.ɵɵtemplate(16, NzModalConfirmContainerComponent_button_16_Template, 2, 6, \"button\", 15);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"width\", i0.ɵɵpipeBind1(2, 11, ctx.config == null ? null : ctx.config.nzWidth));\n          i0.ɵɵproperty(\"ngClass\", ctx.config.nzClassName)(\"ngStyle\", ctx.config.nzStyle);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.config.nzClosable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngStyle\", ctx.config.nzBodyStyle);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"nzType\", ctx.config.nzIconType);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzTitle);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isStringContent);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.config.nzCancelText !== null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.config.nzOkText !== null);\n        }\n      },\n      dependencies: [i6.NgClass, i6.NgIf, i6.NgStyle, i2$1.NzStringTemplateOutletDirective, i8.CdkPortalOutlet, i9.NzButtonComponent, i3$1.ɵNzTransitionPatchDirective, i11.NzWaveDirective, i4.NzIconDirective, NzModalCloseComponent, i14.NzToCssUnitPipe],\n      encapsulation: 2,\n      data: {\n        animation: [nzModalAnimations.modalContainer]\n      }\n    });\n  }\n  return NzModalConfirmContainerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzModalFooterComponent = /*#__PURE__*/(() => {\n  class NzModalFooterComponent {\n    constructor(i18n, config) {\n      this.i18n = i18n;\n      this.config = config;\n      this.buttonsFooter = false;\n      this.buttons = [];\n      this.cancelTriggered = new EventEmitter();\n      this.okTriggered = new EventEmitter();\n      this.destroy$ = new Subject();\n      if (Array.isArray(config.nzFooter)) {\n        this.buttonsFooter = true;\n        this.buttons = config.nzFooter.map(mergeDefaultOption);\n      }\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.locale = this.i18n.getLocaleData('Modal');\n      });\n    }\n    onCancel() {\n      this.cancelTriggered.emit();\n    }\n    onOk() {\n      this.okTriggered.emit();\n    }\n    /**\n     * Returns the value of the specified key.\n     * If it is a function, run and return the return value of the function.\n     */\n    getButtonCallableProp(options, prop) {\n      const value = options[prop];\n      const componentInstance = this.modalRef.getContentComponent();\n      return typeof value === 'function' ? value.apply(options, componentInstance && [componentInstance]) : value;\n    }\n    /**\n     * Run function based on the type and set its `loading` prop if needed.\n     */\n    onButtonClick(options) {\n      const loading = this.getButtonCallableProp(options, 'loading');\n      if (!loading) {\n        const result = this.getButtonCallableProp(options, 'onClick');\n        if (options.autoLoading && isPromise(result)) {\n          options.loading = true;\n          result.then(() => options.loading = false).catch(e => {\n            options.loading = false;\n            throw e;\n          });\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzModalFooterComponent_Factory(t) {\n      return new (t || NzModalFooterComponent)(i0.ɵɵdirectiveInject(i1$1.NzI18nService), i0.ɵɵdirectiveInject(ModalOptions));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzModalFooterComponent,\n      selectors: [[\"div\", \"nz-modal-footer\", \"\"]],\n      hostAttrs: [1, \"ant-modal-footer\"],\n      inputs: {\n        modalRef: \"modalRef\"\n      },\n      outputs: {\n        cancelTriggered: \"cancelTriggered\",\n        okTriggered: \"okTriggered\"\n      },\n      exportAs: [\"NzModalFooterBuiltin\"],\n      attrs: _c2,\n      decls: 3,\n      vars: 2,\n      consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultFooterButtons\", \"\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [3, \"innerHTML\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"innerHTML\"], [\"nz-button\", \"\", 3, \"hidden\", \"nzLoading\", \"disabled\", \"nzType\", \"nzDanger\", \"nzShape\", \"nzSize\", \"nzGhost\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-button\", \"\", 3, \"hidden\", \"nzLoading\", \"disabled\", \"nzType\", \"nzDanger\", \"nzShape\", \"nzSize\", \"nzGhost\", \"click\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzDanger\", \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzDanger\", \"nzLoading\", \"disabled\", \"click\"]],\n      template: function NzModalFooterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzModalFooterComponent_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n          i0.ɵɵtemplate(1, NzModalFooterComponent_ng_template_1_Template, 2, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.config.nzFooter)(\"ngIfElse\", _r1);\n        }\n      },\n      dependencies: [i6.NgForOf, i6.NgIf, i2$1.NzStringTemplateOutletDirective, i9.NzButtonComponent, i3$1.ɵNzTransitionPatchDirective, i11.NzWaveDirective],\n      encapsulation: 2\n    });\n  }\n  return NzModalFooterComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction mergeDefaultOption(options) {\n  return {\n    type: null,\n    size: 'default',\n    autoLoading: true,\n    show: true,\n    loading: false,\n    disabled: false,\n    ...options\n  };\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzModalTitleComponent = /*#__PURE__*/(() => {\n  class NzModalTitleComponent {\n    constructor(config) {\n      this.config = config;\n    }\n    static #_ = this.ɵfac = function NzModalTitleComponent_Factory(t) {\n      return new (t || NzModalTitleComponent)(i0.ɵɵdirectiveInject(ModalOptions));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzModalTitleComponent,\n      selectors: [[\"div\", \"nz-modal-title\", \"\"]],\n      hostAttrs: [1, \"ant-modal-header\"],\n      exportAs: [\"NzModalTitleBuiltin\"],\n      attrs: _c4,\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"ant-modal-title\"], [4, \"nzStringTemplateOutlet\"], [3, \"innerHTML\"]],\n      template: function NzModalTitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, NzModalTitleComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzTitle);\n        }\n      },\n      dependencies: [i2$1.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzModalTitleComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzModalContainerComponent = /*#__PURE__*/(() => {\n  class NzModalContainerComponent extends BaseModalContainerComponent {\n    constructor(ngZone, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n      super(ngZone, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType);\n      this.config = config;\n    }\n    ngOnInit() {\n      this.setupMouseListeners(this.modalElementRef);\n    }\n    static #_ = this.ɵfac = function NzModalContainerComponent_Factory(t) {\n      return new (t || NzModalContainerComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.OverlayRef), i0.ɵɵdirectiveInject(i3.NzConfigService), i0.ɵɵdirectiveInject(ModalOptions), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzModalContainerComponent,\n      selectors: [[\"nz-modal-container\"]],\n      viewQuery: function NzModalContainerComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n          i0.ɵɵviewQuery(_c1, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalElementRef = _t.first);\n        }\n      },\n      hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\"],\n      hostVars: 10,\n      hostBindings: function NzModalContainerComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵsyntheticHostListener(\"@modalContainer.start\", function NzModalContainerComponent_animation_modalContainer_start_HostBindingHandler($event) {\n            return ctx.onAnimationStart($event);\n          })(\"@modalContainer.done\", function NzModalContainerComponent_animation_modalContainer_done_HostBindingHandler($event) {\n            return ctx.onAnimationDone($event);\n          });\n          i0.ɵɵlistener(\"click\", function NzModalContainerComponent_click_HostBindingHandler($event) {\n            return ctx.onContainerClick($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.config.nzNoAnimation)(\"@modalContainer\", ctx.state);\n          i0.ɵɵclassMap(ctx.config.nzWrapClassName ? \"ant-modal-wrap \" + ctx.config.nzWrapClassName : \"ant-modal-wrap\");\n          i0.ɵɵstyleProp(\"z-index\", ctx.config.nzZIndex);\n          i0.ɵɵclassProp(\"ant-modal-wrap-rtl\", ctx.dir === \"rtl\")(\"ant-modal-centered\", ctx.config.nzCentered);\n        }\n      },\n      exportAs: [\"nzModalContainer\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 10,\n      vars: 11,\n      consts: [[\"role\", \"document\", 1, \"ant-modal\", 3, \"ngClass\", \"ngStyle\"], [\"modalElement\", \"\"], [1, \"ant-modal-content\"], [\"nz-modal-close\", \"\", 3, \"click\", 4, \"ngIf\"], [\"nz-modal-title\", \"\", 4, \"ngIf\"], [1, \"ant-modal-body\", 3, \"ngStyle\"], [\"cdkPortalOutlet\", \"\"], [3, \"innerHTML\", 4, \"ngIf\"], [\"nz-modal-footer\", \"\", 3, \"modalRef\", \"cancelTriggered\", \"okTriggered\", 4, \"ngIf\"], [\"nz-modal-close\", \"\", 3, \"click\"], [\"nz-modal-title\", \"\"], [3, \"innerHTML\"], [\"nz-modal-footer\", \"\", 3, \"modalRef\", \"cancelTriggered\", \"okTriggered\"]],\n      template: function NzModalContainerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0, 1);\n          i0.ɵɵpipe(2, \"nzToCssUnit\");\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵtemplate(4, NzModalContainerComponent_button_4_Template, 1, 0, \"button\", 3);\n          i0.ɵɵtemplate(5, NzModalContainerComponent_div_5_Template, 1, 0, \"div\", 4);\n          i0.ɵɵelementStart(6, \"div\", 5);\n          i0.ɵɵtemplate(7, NzModalContainerComponent_ng_template_7_Template, 0, 0, \"ng-template\", 6);\n          i0.ɵɵtemplate(8, NzModalContainerComponent_div_8_Template, 1, 1, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, NzModalContainerComponent_div_9_Template, 1, 1, \"div\", 8);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"width\", i0.ɵɵpipeBind1(2, 9, ctx.config == null ? null : ctx.config.nzWidth));\n          i0.ɵɵproperty(\"ngClass\", ctx.config.nzClassName)(\"ngStyle\", ctx.config.nzStyle);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.config.nzClosable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.config.nzTitle);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngStyle\", ctx.config.nzBodyStyle);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isStringContent);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.config.nzFooter !== null);\n        }\n      },\n      dependencies: [i6.NgClass, i6.NgIf, i6.NgStyle, i8.CdkPortalOutlet, NzModalCloseComponent, NzModalFooterComponent, NzModalTitleComponent, i14.NzToCssUnitPipe],\n      encapsulation: 2,\n      data: {\n        animation: [nzModalAnimations.modalContainer]\n      }\n    });\n  }\n  return NzModalContainerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalRef {\n  constructor(overlayRef, config, containerInstance) {\n    this.overlayRef = overlayRef;\n    this.config = config;\n    this.containerInstance = containerInstance;\n    this.componentInstance = null;\n    this.state = 0 /* NzModalState.OPEN */;\n    this.afterClose = new Subject();\n    this.afterOpen = new Subject();\n    this.destroy$ = new Subject();\n    containerInstance.animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'enter'), take(1)).subscribe(() => {\n      this.afterOpen.next();\n      this.afterOpen.complete();\n      if (config.nzAfterOpen instanceof EventEmitter) {\n        config.nzAfterOpen.emit();\n      }\n    });\n    containerInstance.animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'exit'), take(1)).subscribe(() => {\n      clearTimeout(this.closeTimeout);\n      this._finishDialogClose();\n    });\n    containerInstance.containerClick.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n      const cancelable = !this.config.nzCancelLoading && !this.config.nzOkLoading;\n      if (cancelable) {\n        this.trigger(\"cancel\" /* NzTriggerAction.CANCEL */);\n      }\n    });\n\n    overlayRef.keydownEvents().pipe(filter(event => this.config.nzKeyboard && !this.config.nzCancelLoading && !this.config.nzOkLoading && event.keyCode === ESCAPE && !hasModifierKey(event))).subscribe(event => {\n      event.preventDefault();\n      this.trigger(\"cancel\" /* NzTriggerAction.CANCEL */);\n    });\n\n    containerInstance.cancelTriggered.pipe(takeUntil(this.destroy$)).subscribe(() => this.trigger(\"cancel\" /* NzTriggerAction.CANCEL */));\n    containerInstance.okTriggered.pipe(takeUntil(this.destroy$)).subscribe(() => this.trigger(\"ok\" /* NzTriggerAction.OK */));\n    overlayRef.detachments().subscribe(() => {\n      this.afterClose.next(this.result);\n      this.afterClose.complete();\n      if (config.nzAfterClose instanceof EventEmitter) {\n        config.nzAfterClose.emit(this.result);\n      }\n      this.componentInstance = null;\n      this.overlayRef.dispose();\n    });\n  }\n  getContentComponent() {\n    return this.componentInstance;\n  }\n  getElement() {\n    return this.containerInstance.getNativeElement();\n  }\n  destroy(result) {\n    this.close(result);\n  }\n  triggerOk() {\n    return this.trigger(\"ok\" /* NzTriggerAction.OK */);\n  }\n\n  triggerCancel() {\n    return this.trigger(\"cancel\" /* NzTriggerAction.CANCEL */);\n  }\n\n  close(result) {\n    if (this.state !== 0 /* NzModalState.OPEN */) {\n      return;\n    }\n    this.result = result;\n    this.containerInstance.animationStateChanged.pipe(filter(event => event.phaseName === 'start'), take(1)).subscribe(event => {\n      this.overlayRef.detachBackdrop();\n      this.closeTimeout = setTimeout(() => {\n        this._finishDialogClose();\n      }, event.totalTime + 100);\n    });\n    this.containerInstance.startExitAnimation();\n    this.state = 1 /* NzModalState.CLOSING */;\n  }\n\n  updateConfig(config) {\n    Object.assign(this.config, config);\n    this.containerInstance.bindBackdropStyle();\n    this.containerInstance.cdr.markForCheck();\n  }\n  getState() {\n    return this.state;\n  }\n  getConfig() {\n    return this.config;\n  }\n  getBackdropElement() {\n    return this.overlayRef.backdropElement;\n  }\n  trigger(action) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.state === 1 /* NzModalState.CLOSING */) {\n        return;\n      }\n      const trigger = {\n        ok: _this.config.nzOnOk,\n        cancel: _this.config.nzOnCancel\n      }[action];\n      const loadingKey = {\n        ok: 'nzOkLoading',\n        cancel: 'nzCancelLoading'\n      }[action];\n      const loading = _this.config[loadingKey];\n      if (loading) {\n        return;\n      }\n      if (trigger instanceof EventEmitter) {\n        trigger.emit(_this.getContentComponent());\n      } else if (typeof trigger === 'function') {\n        const result = trigger(_this.getContentComponent());\n        if (isPromise(result)) {\n          _this.config[loadingKey] = true;\n          let doClose = false;\n          try {\n            doClose = yield result;\n          } finally {\n            _this.config[loadingKey] = false;\n            _this.closeWhitResult(doClose);\n          }\n        } else {\n          _this.closeWhitResult(result);\n        }\n      }\n    })();\n  }\n  closeWhitResult(result) {\n    if (result !== false) {\n      this.close(result);\n    }\n  }\n  _finishDialogClose() {\n    this.state = 2 /* NzModalState.CLOSED */;\n    this.overlayRef.dispose();\n    this.destroy$.next();\n  }\n}\nlet NzModalService = /*#__PURE__*/(() => {\n  class NzModalService {\n    get openModals() {\n      return this.parentModal ? this.parentModal.openModals : this.openModalsAtThisLevel;\n    }\n    get _afterAllClosed() {\n      const parent = this.parentModal;\n      return parent ? parent._afterAllClosed : this.afterAllClosedAtThisLevel;\n    }\n    constructor(overlay, injector, nzConfigService, parentModal, directionality) {\n      this.overlay = overlay;\n      this.injector = injector;\n      this.nzConfigService = nzConfigService;\n      this.parentModal = parentModal;\n      this.directionality = directionality;\n      this.openModalsAtThisLevel = [];\n      this.afterAllClosedAtThisLevel = new Subject();\n      this.afterAllClose = defer(() => this.openModals.length ? this._afterAllClosed : this._afterAllClosed.pipe(startWith(undefined)));\n    }\n    create(config) {\n      return this.open(config.nzContent, config);\n    }\n    closeAll() {\n      this.closeModals(this.openModals);\n    }\n    confirm(options = {}, confirmType = 'confirm') {\n      if ('nzFooter' in options) {\n        warn(`The Confirm-Modal doesn't support \"nzFooter\", this property will be ignored.`);\n      }\n      if (!('nzWidth' in options)) {\n        options.nzWidth = 416;\n      }\n      if (!('nzMaskClosable' in options)) {\n        options.nzMaskClosable = false;\n      }\n      options.nzModalType = 'confirm';\n      options.nzClassName = `ant-modal-confirm ant-modal-confirm-${confirmType} ${options.nzClassName || ''}`;\n      return this.create(options);\n    }\n    info(options = {}) {\n      return this.confirmFactory(options, 'info');\n    }\n    success(options = {}) {\n      return this.confirmFactory(options, 'success');\n    }\n    error(options = {}) {\n      return this.confirmFactory(options, 'error');\n    }\n    warning(options = {}) {\n      return this.confirmFactory(options, 'warning');\n    }\n    open(componentOrTemplateRef, config) {\n      const configMerged = applyConfigDefaults(config || {}, new ModalOptions());\n      const overlayRef = this.createOverlay(configMerged);\n      const modalContainer = this.attachModalContainer(overlayRef, configMerged);\n      const modalRef = this.attachModalContent(componentOrTemplateRef, modalContainer, overlayRef, configMerged);\n      modalContainer.modalRef = modalRef;\n      this.openModals.push(modalRef);\n      modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n      return modalRef;\n    }\n    removeOpenModal(modalRef) {\n      const index = this.openModals.indexOf(modalRef);\n      if (index > -1) {\n        this.openModals.splice(index, 1);\n        if (!this.openModals.length) {\n          this._afterAllClosed.next();\n        }\n      }\n    }\n    closeModals(dialogs) {\n      let i = dialogs.length;\n      while (i--) {\n        dialogs[i].close();\n        if (!this.openModals.length) {\n          this._afterAllClosed.next();\n        }\n      }\n    }\n    createOverlay(config) {\n      const globalConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n      const overlayConfig = new OverlayConfig({\n        hasBackdrop: true,\n        scrollStrategy: this.overlay.scrollStrategies.block(),\n        positionStrategy: this.overlay.position().global(),\n        disposeOnNavigation: getValueWithConfig(config.nzCloseOnNavigation, globalConfig.nzCloseOnNavigation, true),\n        direction: getValueWithConfig(config.nzDirection, globalConfig.nzDirection, this.directionality.value)\n      });\n      if (getValueWithConfig(config.nzMask, globalConfig.nzMask, true)) {\n        overlayConfig.backdropClass = MODAL_MASK_CLASS_NAME;\n      }\n      return this.overlay.create(overlayConfig);\n    }\n    attachModalContainer(overlayRef, config) {\n      const userInjector = config && config.nzViewContainerRef && config.nzViewContainerRef.injector;\n      const injector = Injector.create({\n        parent: userInjector || this.injector,\n        providers: [{\n          provide: OverlayRef,\n          useValue: overlayRef\n        }, {\n          provide: ModalOptions,\n          useValue: config\n        }]\n      });\n      const ContainerComponent = config.nzModalType === 'confirm' ?\n      // If the mode is `confirm`, use `NzModalConfirmContainerComponent`\n      NzModalConfirmContainerComponent :\n      // If the mode is not `confirm`, use `NzModalContainerComponent`\n      NzModalContainerComponent;\n      const containerPortal = new ComponentPortal(ContainerComponent, config.nzViewContainerRef, injector);\n      const containerRef = overlayRef.attach(containerPortal);\n      return containerRef.instance;\n    }\n    attachModalContent(componentOrTemplateRef, modalContainer, overlayRef, config) {\n      const modalRef = new NzModalRef(overlayRef, config, modalContainer);\n      if (componentOrTemplateRef instanceof TemplateRef) {\n        modalContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n          $implicit: config.nzData,\n          modalRef\n        }));\n      } else if (isNotNil(componentOrTemplateRef) && typeof componentOrTemplateRef !== 'string') {\n        const injector = this.createInjector(modalRef, config);\n        const contentRef = modalContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.nzViewContainerRef, injector));\n        modalRef.componentInstance = contentRef.instance;\n      } else {\n        modalContainer.attachStringContent();\n      }\n      return modalRef;\n    }\n    createInjector(modalRef, config) {\n      const userInjector = config && config.nzViewContainerRef && config.nzViewContainerRef.injector;\n      return Injector.create({\n        parent: userInjector || this.injector,\n        providers: [{\n          provide: NzModalRef,\n          useValue: modalRef\n        }, {\n          provide: NZ_MODAL_DATA,\n          useValue: config.nzData\n        }]\n      });\n    }\n    confirmFactory(options = {}, confirmType) {\n      const iconMap = {\n        info: 'info-circle',\n        success: 'check-circle',\n        error: 'close-circle',\n        warning: 'exclamation-circle'\n      };\n      if (!('nzIconType' in options)) {\n        options.nzIconType = iconMap[confirmType];\n      }\n      if (!('nzCancelText' in options)) {\n        // Remove the Cancel button if the user not specify a Cancel button\n        options.nzCancelText = null;\n      }\n      return this.confirm(options, confirmType);\n    }\n    ngOnDestroy() {\n      this.closeModals(this.openModalsAtThisLevel);\n      this.afterAllClosedAtThisLevel.complete();\n    }\n    static #_ = this.ɵfac = function NzModalService_Factory(t) {\n      return new (t || NzModalService)(i0.ɵɵinject(i2.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i3.NzConfigService), i0.ɵɵinject(NzModalService, 12), i0.ɵɵinject(i3$2.Directionality, 8));\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzModalService,\n      factory: NzModalService.ɵfac\n    });\n  }\n  return NzModalService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzModalContentDirective = /*#__PURE__*/(() => {\n  class NzModalContentDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n    static #_ = this.ɵfac = function NzModalContentDirective_Factory(t) {\n      return new (t || NzModalContentDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzModalContentDirective,\n      selectors: [[\"\", \"nzModalContent\", \"\"]],\n      exportAs: [\"nzModalContent\"]\n    });\n  }\n  return NzModalContentDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzModalFooterDirective = /*#__PURE__*/(() => {\n  class NzModalFooterDirective {\n    constructor(nzModalRef, templateRef) {\n      this.nzModalRef = nzModalRef;\n      this.templateRef = templateRef;\n      if (this.nzModalRef) {\n        this.nzModalRef.updateConfig({\n          nzFooter: this.templateRef\n        });\n      }\n    }\n    static #_ = this.ɵfac = function NzModalFooterDirective_Factory(t) {\n      return new (t || NzModalFooterDirective)(i0.ɵɵdirectiveInject(NzModalRef, 8), i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzModalFooterDirective,\n      selectors: [[\"\", \"nzModalFooter\", \"\"]],\n      exportAs: [\"nzModalFooter\"]\n    });\n  }\n  return NzModalFooterDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzModalTitleDirective = /*#__PURE__*/(() => {\n  class NzModalTitleDirective {\n    constructor(nzModalRef, templateRef) {\n      this.nzModalRef = nzModalRef;\n      this.templateRef = templateRef;\n      if (this.nzModalRef) {\n        this.nzModalRef.updateConfig({\n          nzTitle: this.templateRef\n        });\n      }\n    }\n    static #_ = this.ɵfac = function NzModalTitleDirective_Factory(t) {\n      return new (t || NzModalTitleDirective)(i0.ɵɵdirectiveInject(NzModalRef, 8), i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzModalTitleDirective,\n      selectors: [[\"\", \"nzModalTitle\", \"\"]],\n      exportAs: [\"nzModalTitle\"]\n    });\n  }\n  return NzModalTitleDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzModalComponent = /*#__PURE__*/(() => {\n  class NzModalComponent {\n    set modalTitle(value) {\n      if (value) {\n        this.setTitleWithTemplate(value);\n      }\n    }\n    set modalFooter(value) {\n      if (value) {\n        this.setFooterWithTemplate(value);\n      }\n    }\n    get afterOpen() {\n      // Observable alias for nzAfterOpen\n      return this.nzAfterOpen.asObservable();\n    }\n    get afterClose() {\n      // Observable alias for nzAfterClose\n      return this.nzAfterClose.asObservable();\n    }\n    constructor(cdr, modal, viewContainerRef) {\n      this.cdr = cdr;\n      this.modal = modal;\n      this.viewContainerRef = viewContainerRef;\n      this.nzVisible = false;\n      this.nzClosable = true;\n      this.nzOkLoading = false;\n      this.nzOkDisabled = false;\n      this.nzCancelDisabled = false;\n      this.nzCancelLoading = false;\n      this.nzKeyboard = true;\n      this.nzNoAnimation = false;\n      this.nzCentered = false;\n      this.nzZIndex = 1000;\n      this.nzWidth = 520;\n      this.nzCloseIcon = 'close';\n      this.nzOkType = 'primary';\n      this.nzOkDanger = false;\n      this.nzIconType = 'question-circle'; // Confirm Modal ONLY\n      this.nzModalType = 'default';\n      this.nzAutofocus = 'auto';\n      // TODO(@hsuanxyz) Input will not be supported\n      this.nzOnOk = new EventEmitter();\n      // TODO(@hsuanxyz) Input will not be supported\n      this.nzOnCancel = new EventEmitter();\n      this.nzAfterOpen = new EventEmitter();\n      this.nzAfterClose = new EventEmitter();\n      this.nzVisibleChange = new EventEmitter();\n      this.modalRef = null;\n      this.destroy$ = new Subject();\n    }\n    open() {\n      if (!this.nzVisible) {\n        this.nzVisible = true;\n        this.nzVisibleChange.emit(true);\n      }\n      if (!this.modalRef) {\n        const config = this.getConfig();\n        this.modalRef = this.modal.create(config);\n        // When the modal is implicitly closed (e.g. closeAll) the nzVisible needs to be set to the correct value and emit.\n        this.modalRef.afterClose.asObservable().pipe(takeUntil(this.destroy$)).subscribe(() => {\n          this.close();\n        });\n      }\n    }\n    close(result) {\n      if (this.nzVisible) {\n        this.nzVisible = false;\n        this.nzVisibleChange.emit(false);\n      }\n      if (this.modalRef) {\n        this.modalRef.close(result);\n        this.modalRef = null;\n      }\n    }\n    destroy(result) {\n      this.close(result);\n    }\n    triggerOk() {\n      this.modalRef?.triggerOk();\n    }\n    triggerCancel() {\n      this.modalRef?.triggerCancel();\n    }\n    getContentComponent() {\n      return this.modalRef?.getContentComponent();\n    }\n    getElement() {\n      return this.modalRef?.getElement();\n    }\n    getModalRef() {\n      return this.modalRef;\n    }\n    setTitleWithTemplate(templateRef) {\n      this.nzTitle = templateRef;\n      if (this.modalRef) {\n        // If modalRef already created, set the title in next tick\n        Promise.resolve().then(() => {\n          this.modalRef.updateConfig({\n            nzTitle: this.nzTitle\n          });\n        });\n      }\n    }\n    setFooterWithTemplate(templateRef) {\n      this.nzFooter = templateRef;\n      if (this.modalRef) {\n        // If modalRef already created, set the footer in next tick\n        Promise.resolve().then(() => {\n          this.modalRef.updateConfig({\n            nzFooter: this.nzFooter\n          });\n        });\n      }\n      this.cdr.markForCheck();\n    }\n    getConfig() {\n      const componentConfig = getConfigFromComponent(this);\n      componentConfig.nzViewContainerRef = this.viewContainerRef;\n      componentConfig.nzContent = this.nzContent || this.contentFromContentChild;\n      return componentConfig;\n    }\n    ngOnChanges(changes) {\n      const {\n        nzVisible,\n        ...otherChanges\n      } = changes;\n      if (Object.keys(otherChanges).length && this.modalRef) {\n        this.modalRef.updateConfig(getConfigFromComponent(this));\n      }\n      if (nzVisible) {\n        if (this.nzVisible) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.modalRef?._finishDialogClose();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzModalComponent_Factory(t) {\n      return new (t || NzModalComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzModalService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzModalComponent,\n      selectors: [[\"nz-modal\"]],\n      contentQueries: function NzModalComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzModalTitleDirective, 7, TemplateRef);\n          i0.ɵɵcontentQuery(dirIndex, NzModalContentDirective, 7, TemplateRef);\n          i0.ɵɵcontentQuery(dirIndex, NzModalFooterDirective, 7, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalTitle = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentFromContentChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalFooter = _t.first);\n        }\n      },\n      inputs: {\n        nzMask: \"nzMask\",\n        nzMaskClosable: \"nzMaskClosable\",\n        nzCloseOnNavigation: \"nzCloseOnNavigation\",\n        nzVisible: \"nzVisible\",\n        nzClosable: \"nzClosable\",\n        nzOkLoading: \"nzOkLoading\",\n        nzOkDisabled: \"nzOkDisabled\",\n        nzCancelDisabled: \"nzCancelDisabled\",\n        nzCancelLoading: \"nzCancelLoading\",\n        nzKeyboard: \"nzKeyboard\",\n        nzNoAnimation: \"nzNoAnimation\",\n        nzCentered: \"nzCentered\",\n        nzContent: \"nzContent\",\n        nzFooter: \"nzFooter\",\n        nzZIndex: \"nzZIndex\",\n        nzWidth: \"nzWidth\",\n        nzWrapClassName: \"nzWrapClassName\",\n        nzClassName: \"nzClassName\",\n        nzStyle: \"nzStyle\",\n        nzTitle: \"nzTitle\",\n        nzCloseIcon: \"nzCloseIcon\",\n        nzMaskStyle: \"nzMaskStyle\",\n        nzBodyStyle: \"nzBodyStyle\",\n        nzOkText: \"nzOkText\",\n        nzCancelText: \"nzCancelText\",\n        nzOkType: \"nzOkType\",\n        nzOkDanger: \"nzOkDanger\",\n        nzIconType: \"nzIconType\",\n        nzModalType: \"nzModalType\",\n        nzAutofocus: \"nzAutofocus\",\n        nzOnOk: \"nzOnOk\",\n        nzOnCancel: \"nzOnCancel\"\n      },\n      outputs: {\n        nzOnOk: \"nzOnOk\",\n        nzOnCancel: \"nzOnCancel\",\n        nzAfterOpen: \"nzAfterOpen\",\n        nzAfterClose: \"nzAfterClose\",\n        nzVisibleChange: \"nzVisibleChange\"\n      },\n      exportAs: [\"nzModal\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 0,\n      vars: 0,\n      template: function NzModalComponent_Template(rf, ctx) {},\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzMask\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzMaskClosable\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzCloseOnNavigation\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzVisible\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzClosable\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzOkLoading\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzOkDisabled\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzCancelDisabled\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzCancelLoading\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzKeyboard\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzNoAnimation\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzCentered\", void 0);\n  __decorate([InputBoolean()], NzModalComponent.prototype, \"nzOkDanger\", void 0);\n  return NzModalComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzModalModule = /*#__PURE__*/(() => {\n  class NzModalModule {\n    static #_ = this.ɵfac = function NzModalModule_Factory(t) {\n      return new (t || NzModalModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzModalModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [NzModalService],\n      imports: [CommonModule, BidiModule, OverlayModule, NzOutletModule, PortalModule, NzI18nModule, NzButtonModule, NzIconModule, NzPipesModule, NzNoAnimationModule, NzPipesModule]\n    });\n  }\n  return NzModalModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzModalLegacyAPI {}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseModalContainerComponent, FADE_CLASS_NAME_MAP, MODAL_MASK_CLASS_NAME, ModalOptions, NZ_CONFIG_MODULE_NAME, NZ_MODAL_DATA, NzModalCloseComponent, NzModalComponent, NzModalConfirmContainerComponent, NzModalContainerComponent, NzModalContentDirective, NzModalFooterComponent, NzModalFooterDirective, NzModalLegacyAPI, NzModalModule, NzModalRef, NzModalService, NzModalTitleComponent, NzModalTitleDirective, ZOOM_CLASS_NAME_MAP, applyConfigDefaults, getConfigFromComponent, getValueWithConfig, nzModalAnimations, throwNzModalContentAlreadyAttachedError };\n//# sourceMappingURL=ng-zorro-antd-modal.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}